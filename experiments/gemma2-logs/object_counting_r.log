normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
allow_non_ascii: false
anneal: true
attack: gcg
batch_size: 64
control_init: proper logical reasoning and think step by step. Finally give the actual
  correct answer.
control_weight: 0.2
conversation_templates:
- gemma-2
- gemma-2
data_offset: 0
devices:
- cuda:0
- cuda:1
extractor_text: 'Therefore, the final answer (use exactly this format: **NUMBER**,
  where NUMBER is a positive integer) is **'
filter_cand: true
gbda_deterministic: true
incr_control: false
logfile: ''
lr: 0.01
model_kwargs:
- low_cpu_mem_usage: true
  use_cache: false
- low_cpu_mem_usage: true
  use_cache: false
model_paths:
- google/gemma-2-9b-it
- google/gemma-2-9b-it
n_steps: 125
n_test_data: 50
n_train_data: 50
num_train_models: 1
progressive_goals: true
progressive_models: false
result_prefix: results/transfer_gemma2_object_counting_ff.json
stop_on_success: false
target_weight: 1.0
temp: 1
test_data: ../data/BBH/object_counting.json
test_steps: 500
tokenizer_kwargs:
- add_bos_token: false
  use_fast: false
- add_bos_token: false
  use_fast: false
tokenizer_paths:
- google/gemma-2-9b-it
- google/gemma-2-9b-it
topk: 40
train_data: ../data/BBH/object_counting.json
transfer: true
verbose: true

Loaded 50 train goals
Loaded 50 test goals
Loaded 2 tokenizers
Loaded 2 conversation templates
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:00<00:01,  1.70it/s]Loading checkpoint shards:  50%|█████     | 2/4 [00:01<00:01,  1.62it/s]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:01<00:00,  1.67it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:02<00:00,  1.82it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:02<00:00,  1.76it/s]
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:00<00:01,  1.69it/s]Loading checkpoint shards:  50%|█████     | 2/4 [00:01<00:01,  1.77it/s]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:01<00:00,  1.76it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:02<00:00,  1.90it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:02<00:00,  1.84it/s]Initialized Workers...

Started worker 1073795 for model google/gemma-2-9b-it
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
Started worker 1074483 for model google/gemma-2-9b-it
Loaded 1 train models
Loaded 1 test models
Time taken to update solutions:  34.190354347229004
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  this counting the a your
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  this counting the a your
>>>> Topk increased to 11 <<<<
Intersection set size: 5
Candidate tokens:  this counting the a your
>>>> Topk increased to 13 <<<<
Intersection set size: 7
Candidate tokens:  this counting the words only a your
Time taken to get recomputed solution logits:  32.411595821380615
>Prompt Choice:  this logical reasoning and think step by step. Finally give the actual correct answer. Loss: 7.98750114440918, Mistakes: 0.2800000011920929, Control Loss: 4.686617851257324, Total Loss: 0.3737323582172394
Time taken to get recomputed solution logits:  34.302937030792236
>Prompt Choice:  a logical reasoning and think step by step. Finally give the actual correct answer. Loss: 8.24921989440918, Mistakes: 0.2800000011920929, Control Loss: 4.873762130737305, Total Loss: 0.37747523188591003
Time taken to get recomputed solution logits:  32.28827977180481
>Prompt Choice:  your logical reasoning and think step by step. Finally give the actual correct answer. Loss: 8.496906280517578, Mistakes: 0.2800000011920929, Control Loss: 4.666706085205078, Total Loss: 0.3733341097831726
No improvement in the current position. Moving to the next position.
New Control:  your logical reasoning and think step by step. Finally give the actual correct answer., New Loss: 0.3733341097831726
Current length: 15
 your logical reasoning and think step by step. Finally give the actual correct answer.
Current Loss: 0.3733341097831726 Best Loss: 0.3733341097831726 Best Control:  your logical reasoning and think step by step. Finally give the actual correct answer.
Step:  0 Candidates:  [(0.3733341097831726, ' your logical reasoning and think step by step. Finally give the actual correct answer.')]
Time taken to update solutions:  31.485552310943604
Intersection set size: 4
Candidate tokens:  logic answer reasoning knowledge
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  logic answer reasoning knowledge
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:  logic answer reasoning knowledge
>>>> Topk increased to 11 <<<<
Intersection set size: 9
Candidate tokens:  counting logic common best brain answer understanding reasoning knowledge
Time taken to get recomputed solution logits:  31.964828491210938
>Prompt Choice:  your best reasoning and think step by step. Finally give the actual correct answer. Loss: 9.623537063598633, Mistakes: 0.3199999928474426, Control Loss: 4.641359329223633, Total Loss: 0.41282719373703003
Time taken to get recomputed solution logits:  25.564358711242676
>Prompt Choice:  your common reasoning and think step by step. Finally give the actual correct answer. Loss: 8.08438777923584, Mistakes: 0.2800000011920929, Control Loss: 5.037045955657959, Total Loss: 0.3807409107685089
Time taken to get recomputed solution logits:  31.52893328666687
>Prompt Choice:  your answer reasoning and think step by step. Finally give the actual correct answer. Loss: 6.209483623504639, Mistakes: 0.23999999463558197, Control Loss: 4.951807022094727, Total Loss: 0.33903613686561584
No improvement in the current position. Moving to the next position.
New Control:  your answer reasoning and think step by step. Finally give the actual correct answer., New Loss: 0.33903613686561584
Current length: 15
 your answer reasoning and think step by step. Finally give the actual correct answer.
Current Loss: 0.33903613686561584 Best Loss: 0.33903613686561584 Best Control:  your answer reasoning and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  30.735227346420288
Intersection set size: 5
Candidate tokens:  to. and as in
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to and. as for in
Time taken to get recomputed solution logits:  28.186389207839966
>Prompt Choice:  your answer as and think step by step. Finally give the actual correct answer. Loss: 5.400782585144043, Mistakes: 0.19999998807907104, Control Loss: 5.365248680114746, Total Loss: 0.3073049485683441
Time taken to get recomputed solution logits:  28.591660499572754
>Prompt Choice:  your answer and and think step by step. Finally give the actual correct answer. Loss: 5.531250476837158, Mistakes: 0.19999998807907104, Control Loss: 5.25471830368042, Total Loss: 0.3050943613052368
Time taken to get recomputed solution logits:  28.998751878738403
>Prompt Choice:  your answer to and think step by step. Finally give the actual correct answer. Loss: 5.3468756675720215, Mistakes: 0.19999998807907104, Control Loss: 5.372441291809082, Total Loss: 0.3074488043785095
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step by step. Finally give the actual correct answer., New Loss: 0.3050943613052368
Current length: 15
 your answer and and think step by step. Finally give the actual correct answer.
Current Loss: 0.3050943613052368 Best Loss: 0.3050943613052368 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  27.934664487838745
Intersection set size: 5
Candidate tokens:  create explain tell the write
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  create tell explain the write
>>>> Topk increased to 9 <<<<
Intersection set size: 8
Candidate tokens:  create the calculate solve tell explain make write
Time taken to get recomputed solution logits:  28.773185968399048
>Prompt Choice:  your answer and and think step by step. Finally give the actual correct answer. Loss: 5.531250476837158, Mistakes: 0.19999998807907104, Control Loss: 5.067316055297852, Total Loss: 0.3013463020324707
Time taken to get recomputed solution logits:  27.84179377555847
>Prompt Choice:  your answer and the think step by step. Finally give the actual correct answer. Loss: 6.196876049041748, Mistakes: 0.23999999463558197, Control Loss: 5.147598743438721, Total Loss: 0.3429519534111023
Time taken to get recomputed solution logits:  36.95043992996216
>Prompt Choice:  your answer and tell think step by step. Finally give the actual correct answer. Loss: 6.085937976837158, Mistakes: 0.23999999463558197, Control Loss: 5.773595333099365, Total Loss: 0.3554719090461731
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step by step. Finally give the actual correct answer., New Loss: 0.3013463020324707
Current length: 15
 your answer and and think step by step. Finally give the actual correct answer.
Current Loss: 0.3013463020324707 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  27.89318871498108
Intersection set size: 4
Candidate tokens:  create explain the write
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  create tell explain the write
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  create tell add explain a the write
Time taken to get recomputed solution logits:  28.58556318283081
>Prompt Choice:  your answer and and think step by step. Finally give the actual correct answer. Loss: 5.531250476837158, Mistakes: 0.19999998807907104, Control Loss: 5.067316055297852, Total Loss: 0.3013463020324707
Time taken to get recomputed solution logits:  31.240843057632446
>Prompt Choice:  your answer and and the step by step. Finally give the actual correct answer. Loss: 6.1961188316345215, Mistakes: 0.23999999463558197, Control Loss: 5.528023719787598, Total Loss: 0.3505604565143585
Time taken to get recomputed solution logits:  30.83104681968689
>Prompt Choice:  your answer and and add step by step. Finally give the actual correct answer. Loss: 5.308594226837158, Mistakes: 0.19999998807907104, Control Loss: 5.214798927307129, Total Loss: 0.30429595708847046normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step by step. Finally give the actual correct answer., New Loss: 0.3013463020324707
Current length: 15
 your answer and and think step by step. Finally give the actual correct answer.
Current Loss: 0.3013463020324707 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  27.959757328033447
Intersection set size: 5
Candidate tokens:  of up about critically creatively
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  of outside up about critically creatively
Time taken to get recomputed solution logits:  28.764070510864258
>Prompt Choice:  your answer and and think step by step. Finally give the actual correct answer. Loss: 5.531250476837158, Mistakes: 0.19999998807907104, Control Loss: 5.067316055297852, Total Loss: 0.3013463020324707
Time taken to get recomputed solution logits:  31.893784284591675
>Prompt Choice:  your answer and and think of by step. Finally give the actual correct answer. Loss: 6.3672614097595215, Mistakes: 0.23999999463558197, Control Loss: 6.65817403793335, Total Loss: 0.37316346168518066
Time taken to get recomputed solution logits:  26.862261295318604
>Prompt Choice:  your answer and and think about by step. Finally give the actual correct answer. Loss: 5.410938739776611, Mistakes: 0.19999998807907104, Control Loss: 6.418799877166748, Total Loss: 0.32837599515914917
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step by step. Finally give the actual correct answer., New Loss: 0.3013463020324707
Current length: 15
 your answer and and think step by step. Finally give the actual correct answer.
Current Loss: 0.3013463020324707 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  28.112143516540527
Intersection set size: 5
Candidate tokens: . wise  further by
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens: . wise  further by
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  wise., one  further by
Time taken to get recomputed solution logits:  29.371434450149536
>Prompt Choice:  your answer and and think step  step. Finally give the actual correct answer. Loss: 5.312500953674316, Mistakes: 0.19999998807907104, Control Loss: 6.115740776062012, Total Loss: 0.3223147988319397
Time taken to get recomputed solution logits:  21.23681879043579
>Prompt Choice:  your answer and and think step one step. Finally give the actual correct answer. Loss: 10.241683006286621, Mistakes: 0.35999998450279236, Control Loss: 5.139137268066406, Total Loss: 0.46278274059295654
Time taken to get recomputed solution logits:  32.23253607749939
>Prompt Choice:  your answer and and think step wise step. Finally give the actual correct answer. Loss: 6.334752082824707, Mistakes: 0.23999999463558197, Control Loss: 5.546031951904297, Total Loss: 0.3509206175804138
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step  step. Finally give the actual correct answer., New Loss: 0.3223147988319397
Current length: 15
 your answer and and think step  step. Finally give the actual correct answer.
Current Loss: 0.3223147988319397 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  28.00360655784607
Intersection set size: 4
Candidate tokens: bystepwiseto
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens: bystepwiseto
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens: forbystepandwisethroughto
Time taken to get recomputed solution logits:  28.514572143554688
>Prompt Choice:  your answer and and think step▁▁and. Finally give the actual correct answer. Loss: 5.260157585144043, Mistakes: 0.19999998807907104, Control Loss: 6.138040542602539, Total Loss: 0.32276079058647156
Time taken to get recomputed solution logits:  28.968085765838623
>Prompt Choice:  your answer and and think step▁▁to. Finally give the actual correct answer. Loss: 5.304689407348633, Mistakes: 0.19999998807907104, Control Loss: 6.106568336486816, Total Loss: 0.32213133573532104
Time taken to get recomputed solution logits:  28.111167669296265
>Prompt Choice:  your answer and and think step▁▁for. Finally give the actual correct answer. Loss: 6.047200679779053, Mistakes: 0.23999999463558197, Control Loss: 6.585567474365234, Total Loss: 0.3717113435268402
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to. Finally give the actual correct answer., New Loss: 0.32213133573532104
Current length: 15
 your answer and and think step▁▁to. Finally give the actual correct answer.
Current Loss: 0.32213133573532104 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  28.390052795410156
Intersection set size: 4
Candidate tokens:  step solve think explain
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  step solve think explain answer by
Time taken to get recomputed solution logits:  29.15542221069336
>Prompt Choice:  your answer and and think step▁▁to. Finally give the actual correct answer. Loss: 5.304689407348633, Mistakes: 0.19999998807907104, Control Loss: 6.173912048339844, Total Loss: 0.32347822189331055
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to. Finally give the actual correct answer., New Loss: 0.32347822189331055
Current length: 15
 your answer and and think step▁▁to. Finally give the actual correct answer.
Current Loss: 0.32347822189331055 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  28.387534379959106
Intersection set size: 5
Candidate tokens:  stepbystep  by
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  stepby thinkstep  by Step
Time taken to get recomputed solution logits:  35.85618019104004
>Prompt Choice:  your answer and and think step▁▁to.by give the actual correct answer. Loss: 5.362501621246338, Mistakes: 0.19999998807907104, Control Loss: 6.903706073760986, Total Loss: 0.33807408809661865
Time taken to get recomputed solution logits:  31.40623378753662
>Prompt Choice:  your answer and and think step▁▁to. think give the actual correct answer. Loss: 5.395313739776611, Mistakes: 0.19999998807907104, Control Loss: 6.98872709274292, Total Loss: 0.33977454900741577
Time taken to get recomputed solution logits:  35.807021379470825
>Prompt Choice:  your answer and and think step▁▁to. by give the actual correct answer. Loss: 5.288282871246338, Mistakes: 0.19999998807907104, Control Loss: 6.999693870544434, Total Loss: 0.3399938642978668
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by give the actual correct answer., New Loss: 0.33807408809661865
Current length: 15
 your answer and and think step▁▁to.by give the actual correct answer.
Current Loss: 0.33807408809661865 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  34.99599552154541
Intersection set size: 5
Candidate tokens:  step., ste steps
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  step. ste, steps
>>>> Topk increased to 9 <<<<
Intersection set size: 9
Candidate tokens:  step. to ste, st  steps Step
Time taken to get recomputed solution logits:  30.541673183441162
>Prompt Choice:  your answer and and think step▁▁to.by to the actual correct answer. Loss: 6.114870548248291, Mistakes: 0.23999999463558197, Control Loss: 6.026829719543457, Total Loss: 0.3605365753173828normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  31.85262155532837
>Prompt Choice:  your answer and and think step▁▁to.by  the actual correct answer. Loss: 6.010944843292236, Mistakes: 0.23999999463558197, Control Loss: 6.968005180358887, Total Loss: 0.3793600797653198
Time taken to get recomputed solution logits:  31.743919372558594
>Prompt Choice:  your answer and and think step▁▁to.by, the actual correct answer. Loss: 6.084383964538574, Mistakes: 0.23999999463558197, Control Loss: 6.35699987411499, Total Loss: 0.367139995098114
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to the actual correct answer., New Loss: 0.3605365753173828
Current length: 15
 your answer and and think step▁▁to.by to the actual correct answer.
Current Loss: 0.3605365753173828 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  29.984455823898315
Intersection set size: 4
Candidate tokens:  solve figure find explain
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  solve figure find explain
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  answer solve determine figure find explain
Time taken to get recomputed solution logits:  29.584381103515625
>Prompt Choice:  your answer and and think step▁▁to.by to determine actual correct answer. Loss: 5.938291072845459, Mistakes: 0.23999999463558197, Control Loss: 6.202323913574219, Total Loss: 0.36404645442962646
Time taken to get recomputed solution logits:  30.063705444335938
>Prompt Choice:  your answer and and think step▁▁to.by to find actual correct answer. Loss: 5.1570353507995605, Mistakes: 0.19999998807907104, Control Loss: 6.233921051025391, Total Loss: 0.3246784210205078
Time taken to get recomputed solution logits:  26.005024194717407
>Prompt Choice:  your answer and and think step▁▁to.by to solve actual correct answer. Loss: 7.642975807189941, Mistakes: 0.2800000011920929, Control Loss: 6.519930362701416, Total Loss: 0.41039860248565674
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find actual correct answer., New Loss: 0.3246784210205078
Current length: 15
 your answer and and think step▁▁to.by to find actual correct answer.
Current Loss: 0.3246784210205078 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  29.33930516242981
Intersection set size: 4
Candidate tokens:  how out a the
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  how out a what the
>>>> Topk increased to 9 <<<<
Intersection set size: 8
Candidate tokens:  my your if how out a what the
Time taken to get recomputed solution logits:  33.68235373497009
>Prompt Choice:  your answer and and think step▁▁to.by to find if correct answer. Loss: 5.886721611022949, Mistakes: 0.23999999463558197, Control Loss: 6.416152000427246, Total Loss: 0.36832302808761597
Time taken to get recomputed solution logits:  30.130671739578247
>Prompt Choice:  your answer and and think step▁▁to.by to find out correct answer. Loss: 5.144566059112549, Mistakes: 0.19999998807907104, Control Loss: 6.196938514709473, Total Loss: 0.3239387571811676
Time taken to get recomputed solution logits:  31.66544818878174
>Prompt Choice:  your answer and and think step▁▁to.by to find your correct answer. Loss: 6.18986701965332, Mistakes: 0.23999999463558197, Control Loss: 5.961331367492676, Total Loss: 0.35922661423683167
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out correct answer., New Loss: 0.3239387571811676
Current length: 15
 your answer and and think step▁▁to.by to find out correct answer.
Current Loss: 0.3239387571811676 Best Loss: 0.3013463020324707 Best Control:  your answer and and think step by step. Finally give the actual correct answer.
Time taken to update solutions:  29.450615644454956
Intersection set size: 5
Candidate tokens: . if how what the
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens: . which if how what the
Time taken to get recomputed solution logits:  29.736844062805176
>Prompt Choice:  your answer and and think step▁▁to.by to find out the answer. Loss: 5.082834243774414, Mistakes: 0.19999998807907104, Control Loss: 5.506824970245361, Total Loss: 0.31013649702072144
Time taken to get recomputed solution logits:  30.203386306762695
>Prompt Choice:  your answer and and think step▁▁to.by to find out correct answer. Loss: 5.144566059112549, Mistakes: 0.19999998807907104, Control Loss: 5.409628868103027, Total Loss: 0.30819255113601685
Time taken to get recomputed solution logits:  33.36294221878052
>Prompt Choice:  your answer and and think step▁▁to.by to find out how answer. Loss: 4.371127128601074, Mistakes: 0.1599999964237213, Control Loss: 6.074297904968262, Total Loss: 0.2814859449863434
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how answer., New Loss: 0.2814859449863434
Current length: 15
 your answer and and think step▁▁to.by to find out how answer.
Current Loss: 0.2814859449863434 Best Loss: 0.2814859449863434 Best Control:  your answer and and think step▁▁to.by to find out how answer.
Time taken to update solutions:  32.539379596710205
Intersection set size: 4
Candidate tokens:  to much you many
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:  to much many
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  to. many much you
>>>> Topk increased to 11 <<<<
Intersection set size: 8
Candidate tokens:  to. many Imany much you the
Time taken to get recomputed solution logits:  25.608763694763184
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much. Loss: 4.162517070770264, Mistakes: 0.19999998807907104, Control Loss: 5.581989288330078, Total Loss: 0.31163978576660156
Time taken to get recomputed solution logits:  30.298085927963257
>Prompt Choice:  your answer and and think step▁▁to.by to find out howmany. Loss: 5.882040977478027, Mistakes: 0.23999999463558197, Control Loss: 5.588626861572266, Total Loss: 0.3517725467681885
Time taken to get recomputed solution logits:  30.507134199142456
>Prompt Choice:  your answer and and think step▁▁to.by to find out how many. Loss: 5.826589107513428, Mistakes: 0.23999999463558197, Control Loss: 5.585175514221191, Total Loss: 0.3517034947872162
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much., New Loss: 0.31163978576660156
Current length: 15
 your answer and and think step▁▁to.by to find out how much.
Current Loss: 0.31163978576660156 Best Loss: 0.2814859449863434 Best Control:  your answer and and think step▁▁to.by to find out how answer.
Time taken to update solutions:  24.886923789978027
Intersection set size: 2
Candidate tokens:  you I
>>>> Topk increased to 7 <<<<
Intersection set size: 2
Candidate tokens:  you I
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  you it money a I
>>>> Topk increased to 11 <<<<
Intersection set size: 7
Candidate tokens:  money each I more you a the
Time taken to get recomputed solution logits:  80.28862833976746
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much money Loss: 4.982283115386963, Mistakes: 0.3199999928474426, Control Loss: 5.310727119445801, Total Loss: 0.4262145161628723
Time taken to get recomputed solution logits:  50.43137073516846
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much more Loss: 7.3037333488464355, Mistakes: 0.35999998450279236, Control Loss: 5.315331935882568, Total Loss: 0.4663066267967224
Time taken to get recomputed solution logits:  46.04134225845337
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each Loss: 2.9328460693359375, Mistakes: 0.11999999731779099, Control Loss: 5.316545486450195, Total Loss: 0.22633090615272522normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each_, New Loss: 0.22633090615272522
Current length: 16
 your answer and and think step▁▁to.by to find out how much each_
Current Loss: 0.22633090615272522 Best Loss: 0.22633090615272522 Best Control:  your answer and and think step▁▁to.by to find out how much each_
Step:  15 Candidates:  [(0.22633090615272522, ' your answer and and think step▁▁to.by to find out how much each_'), (0.2814859449863434, ' your answer and and think step▁▁to.by to find out how answer.'), (0.3013463020324707, ' your answer and and think step by step. Finally give the actual correct answer.'), (0.3013463020324707, ' your answer and and think step by step. Finally give the actual correct answer.'), (0.3013463020324707, ' your answer and and think step by step. Finally give the actual correct answer.'), (0.3050943613052368, ' your answer and and think step by step. Finally give the actual correct answer.'), (0.31163978576660156, ' your answer and and think step▁▁to.by to find out how much.'), (0.32213133573532104, ' your answer and and think step▁▁to. Finally give the actual correct answer.'), (0.3223147988319397, ' your answer and and think step  step. Finally give the actual correct answer.'), (0.32347822189331055, ' your answer and and think step▁▁to. Finally give the actual correct answer.')]
Time taken to update solutions:  47.77148699760437
Intersection set size: 1
Candidate tokens:  individual
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:  of individual item
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:  of individual item one
>>>> Topk increased to 11 <<<<
Intersection set size: 4
Candidate tokens:  of individual item one
>>>> Topk increased to 13 <<<<
Intersection set size: 6
Candidate tokens:  of individual item one type piece
Time taken to get recomputed solution logits:  44.08424162864685
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of Loss: 2.9651854038238525, Mistakes: 0.11999999731779099, Control Loss: 5.671841144561768, Total Loss: 0.23343682289123535
Time taken to get recomputed solution logits:  41.87403321266174
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each one Loss: 4.288543224334717, Mistakes: 0.1599999964237213, Control Loss: 5.674366474151611, Total Loss: 0.2734873294830322
Time taken to get recomputed solution logits:  48.69897699356079
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each_ Loss: 3.8259267807006836, Mistakes: 0.1599999964237213, Control Loss: 5.690207481384277, Total Loss: 0.2738041281700134
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of_, New Loss: 0.23343682289123535
Current length: 17
 your answer and and think step▁▁to.by to find out how much each of_
Current Loss: 0.23343682289123535 Best Loss: 0.22633090615272522 Best Control:  your answer and and think step▁▁to.by to find out how much each_
Time taken to update solutions:  48.762988567352295
Intersection set size: 5
Candidate tokens:  those them these your the
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  these my your those them the
Time taken to get recomputed solution logits:  49.625319957733154
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of_ Loss: 2.988823175430298, Mistakes: 0.11999999731779099, Control Loss: 5.6469879150390625, Total Loss: 0.23293974995613098
Time taken to get recomputed solution logits:  47.207807302474976
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of the Loss: 4.381136417388916, Mistakes: 0.19999998807907104, Control Loss: 5.619558811187744, Total Loss: 0.31239116191864014
Time taken to get recomputed solution logits:  50.83691120147705
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of those Loss: 3.8680272102355957, Mistakes: 0.1599999964237213, Control Loss: 5.626471519470215, Total Loss: 0.2725294232368469
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of__, New Loss: 0.23293974995613098
Current length: 17
 your answer and and think step▁▁to.by to find out how much each of__
Current Loss: 0.23293974995613098 Best Loss: 0.22633090615272522 Best Control:  your answer and and think step▁▁to.by to find out how much each_
Time taken to update solutions:  50.20556402206421
Intersection set size: 4
Candidate tokens:  my them these the
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  the my these those them your
Time taken to get recomputed solution logits:  50.64320921897888
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of those Loss: 3.8680272102355957, Mistakes: 0.1599999964237213, Control Loss: 5.794342994689941, Total Loss: 0.2758868634700775
Time taken to get recomputed solution logits:  51.29165983200073
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of__ Loss: 2.005988836288452, Mistakes: 0.07999999821186066, Control Loss: 5.821081638336182, Total Loss: 0.19642162322998047
Time taken to get recomputed solution logits:  44.35398721694946
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of them Loss: 3.9229063987731934, Mistakes: 0.1599999964237213, Control Loss: 5.794678211212158, Total Loss: 0.27589356899261475
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of___, New Loss: 0.19642162322998047
Current length: 17
 your answer and and think step▁▁to.by to find out how much each of___
Current Loss: 0.19642162322998047 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  54.053929805755615
Intersection set size: 6
Candidate tokens:  my the those them these your
Time taken to get recomputed solution logits:  55.03715109825134
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of___ Loss: 2.768955945968628, Mistakes: 0.11999999731779099, Control Loss: 5.909849643707275, Total Loss: 0.2381969839334488
Time taken to get recomputed solution logits:  41.038021087646484
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of my Loss: 3.9600393772125244, Mistakes: 0.1599999964237213, Control Loss: 5.876785755157471, Total Loss: 0.27753570675849915
Time taken to get recomputed solution logits:  46.594162464141846
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your Loss: 2.99419903755188, Mistakes: 0.11999999731779099, Control Loss: 5.878584384918213, Total Loss: 0.23757168650627136
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of your_, New Loss: 0.23757168650627136
Current length: 18
 your answer and and think step▁▁to.by to find out how much each of your_
Current Loss: 0.23757168650627136 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  47.771716356277466
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 7 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 9 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 11 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 13 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 15 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 17 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 19 <<<<normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 21 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 23 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 25 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 27 <<<<
Intersection set size: 3
Candidate tokens:   items friends
>>>> Topk increased to 29 <<<<
Intersection set size: 4
Candidate tokens:   individual items friends
>>>> Topk increased to 31 <<<<
Intersection set size: 2
Candidate tokens:   friends
>>>> Topk increased to 33 <<<<
Intersection set size: 5
Candidate tokens:  friend total items friends 
>>>> Topk increased to 35 <<<<
Intersection set size: 5
Candidate tokens:   individual other items friends
>>>> Topk increased to 37 <<<<
Intersection set size: 5
Candidate tokens:   individual item total items
>>>> Topk increased to 39 <<<<
Intersection set size: 7
Candidate tokens:  individual item total items  new pieces
Time taken to get recomputed solution logits:  43.50450134277344
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your  Loss: 3.77104115486145, Mistakes: 0.1599999964237213, Control Loss: 5.470655918121338, Total Loss: 0.2694131135940552
Time taken to get recomputed solution logits:  49.27334904670715
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual Loss: 3.920541286468506, Mistakes: 0.1599999964237213, Control Loss: 5.4765496253967285, Total Loss: 0.2695309817790985
Time taken to get recomputed solution logits:  45.70331835746765
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your new Loss: 3.9744482040405273, Mistakes: 0.1599999964237213, Control Loss: 5.475339889526367, Total Loss: 0.2695067822933197
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of your _, New Loss: 0.2694131135940552
Current length: 18
 your answer and and think step▁▁to.by to find out how much each of your _
Current Loss: 0.2694131135940552 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  42.61634302139282
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 7 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 9 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 11 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 13 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 15 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 17 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 19 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 21 <<<<
Intersection set size: 2
Candidate tokens:   items
>>>> Topk increased to 23 <<<<
Intersection set size: 3
Candidate tokens:   individual items
>>>> Topk increased to 25 <<<<
Intersection set size: 3
Candidate tokens:   other items
>>>> Topk increased to 27 <<<<
Intersection set size: 4
Candidate tokens:   individual items friends
>>>> Topk increased to 29 <<<<
Intersection set size: 4
Candidate tokens:   total items things
>>>> Topk increased to 31 <<<<
Intersection set size: 4
Candidate tokens:   individual items friends
>>>> Topk increased to 33 <<<<
Intersection set size: 4
Candidate tokens:   individual total items
>>>> Topk increased to 35 <<<<
Intersection set size: 5
Candidate tokens:  individual other total items 
>>>> Topk increased to 37 <<<<
Intersection set size: 7
Candidate tokens:  individual ingredients item total items friends 
Time taken to get recomputed solution logits:  45.84404420852661
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your total Loss: 4.097071647644043, Mistakes: 0.19999998807907104, Control Loss: 5.5133233070373535, Total Loss: 0.3102664351463318
Time taken to get recomputed solution logits:  43.356948137283325
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your friends Loss: 3.9967041015625, Mistakes: 0.2800000011920929, Control Loss: 5.512671947479248, Total Loss: 0.3902534246444702
Time taken to get recomputed solution logits:  49.25375699996948
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual Loss: 3.920541286468506, Mistakes: 0.1599999964237213, Control Loss: 5.513745307922363, Total Loss: 0.27027490735054016
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of your individual_, New Loss: 0.27027490735054016
Current length: 19
 your answer and and think step▁▁to.by to find out how much each of your individual_
Current Loss: 0.27027490735054016 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  47.96015906333923
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 7 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 9 <<<<
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 11 <<<<
Intersection set size: 2
Candidate tokens:  items pieces
>>>> Topk increased to 13 <<<<
Intersection set size: 2
Candidate tokens:  items pieces
>>>> Topk increased to 15 <<<<
Intersection set size: 2
Candidate tokens:  items pieces
>>>> Topk increased to 17 <<<<
Intersection set size: 4
Candidate tokens:  objects items things pieces
>>>> Topk increased to 19 <<<<
Intersection set size: 3
Candidate tokens:  components items pieces
>>>> Topk increased to 21 <<<<
Intersection set size: 2
Candidate tokens:  items pieces
>>>> Topk increased to 23 <<<<
Intersection set size: 5
Candidate tokens:  ingredients item objects items pieces
>>>> Topk increased to 25 <<<<
Intersection set size: 5
Candidate tokens:  components item items parts pieces
>>>> Topk increased to 27 <<<<
Intersection set size: 4
Candidate tokens:  components item items pieces
>>>> Topk increased to 29 <<<<
Intersection set size: 6
Candidate tokens:  components item items objects pieces things
Time taken to get recomputed solution logits:  45.836931467056274
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual components Loss: 6.312117576599121, Mistakes: 0.23999999463558197, Control Loss: 5.537112712860107, Total Loss: 0.35074225068092346
Time taken to get recomputed solution logits:  48.584593296051025
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual_ Loss: 4.9360833168029785, Mistakes: 0.19999998807907104, Control Loss: 5.547235012054443, Total Loss: 0.31094467639923096
Time taken to get recomputed solution logits:  50.68891644477844
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual objects Loss: 4.115671157836914, Mistakes: 0.19999998807907104, Control Loss: 5.534234046936035, Total Loss: 0.3106846809387207
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of your individual objects_, New Loss: 0.3106846809387207
Current length: 20
 your answer and and think step▁▁to.by to find out how much each of your individual objects_
Current Loss: 0.3106846809387207 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  44.28388261795044
Intersection set size: 3
Candidate tokens:  is are would
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  are weigh weighs would costs cost is
Time taken to get recomputed solution logits:  62.104310750961304
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual objects weighs Loss: 6.057184219360352, Mistakes: 0.2800000011920929, Control Loss: 5.542653560638428, Total Loss: 0.39085307717323303normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  70.65625810623169
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual objects cost Loss: 4.556766986846924, Mistakes: 0.23999999463558197, Control Loss: 5.5417280197143555, Total Loss: 0.35083454847335815
Time taken to get recomputed solution logits:  53.8981499671936
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual objects would Loss: 5.000868320465088, Mistakes: 0.23999999463558197, Control Loss: 5.543687343597412, Total Loss: 0.350873738527298
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of your individual objects cost_, New Loss: 0.35083454847335815
Current length: 21
 your answer and and think step▁▁to.by to find out how much each of your individual objects cost_
Current Loss: 0.35083454847335815 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  70.0297384262085
Intersection set size: 4
Candidate tokens: ., if in
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens: . and to, if in
Time taken to get recomputed solution logits:  70.51633596420288
>Prompt Choice:  your answer and and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 3.765263319015503, Mistakes: 0.1599999964237213, Control Loss: 5.366787433624268, Total Loss: 0.2673357427120209
No improvement in the current position. Moving to the next position.
New Control:  your answer and and think step▁▁to.by to find out how much each of your individual objects cost., New Loss: 0.2673357427120209
Current length: 21
 your answer and and think step▁▁to.by to find out how much each of your individual objects cost.
Current Loss: 0.2673357427120209 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  69.83654928207397
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  this counting the addition a your
Time taken to get recomputed solution logits:  75.84210753440857
>Prompt Choice:  this answer and and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 5.503500938415527, Mistakes: 0.23999999463558197, Control Loss: 4.981071472167969, Total Loss: 0.3396214246749878
Time taken to get recomputed solution logits:  69.41526317596436
>Prompt Choice:  the answer and and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 4.180038928985596, Mistakes: 0.19999998807907104, Control Loss: 5.09285306930542, Total Loss: 0.301857054233551
Time taken to get recomputed solution logits:  61.53428912162781
>Prompt Choice:  counting answer and and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 1.8046875, Mistakes: 0.07999999821186066, Control Loss: 5.914103031158447, Total Loss: 0.19828206300735474
No improvement in the current position. Moving to the next position.
New Control:  counting answer and and think step▁▁to.by to find out how much each of your individual objects cost., New Loss: 0.19828206300735474
Current length: 21
 counting answer and and think step▁▁to.by to find out how much each of your individual objects cost.
Current Loss: 0.19828206300735474 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  60.50756311416626
Intersection set size: 2
Candidate tokens:  to.
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  to. and words method
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  to method words and. principles principle
Time taken to get recomputed solution logits:  61.279149770736694
>Prompt Choice:  counting method and and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 2.7295684814453125, Mistakes: 0.1599999964237213, Control Loss: 5.8262786865234375, Total Loss: 0.2765255570411682
Time taken to get recomputed solution logits:  61.740429162979126
>Prompt Choice:  counting principles and and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 4.911555767059326, Mistakes: 0.23999999463558197, Control Loss: 6.096584796905518, Total Loss: 0.3619316816329956
Time taken to get recomputed solution logits:  52.23623728752136
>Prompt Choice:  counting to and and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 2.4679529666900635, Mistakes: 0.11999999731779099, Control Loss: 5.96218729019165, Total Loss: 0.239243745803833
No improvement in the current position. Moving to the next position.
New Control:  counting to and and think step▁▁to.by to find out how much each of your individual objects cost., New Loss: 0.239243745803833
Current length: 21
 counting to and and think step▁▁to.by to find out how much each of your individual objects cost.
Current Loss: 0.239243745803833 Best Loss: 0.19642162322998047 Best Control:  your answer and and think step▁▁to.by to find out how much each of___
Time taken to update solutions:  51.16356897354126
Intersection set size: 4
Candidate tokens:  find answer determine figure
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  solve determine figure find answer count
Time taken to get recomputed solution logits:  54.92717456817627
>Prompt Choice:  counting to determine and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 2.7404274940490723, Mistakes: 0.11999999731779099, Control Loss: 5.806751251220703, Total Loss: 0.23613502085208893
Time taken to get recomputed solution logits:  56.55400538444519
>Prompt Choice:  counting to figure and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 2.0001096725463867, Mistakes: 0.11999999731779099, Control Loss: 5.9043378829956055, Total Loss: 0.2380867600440979
Time taken to get recomputed solution logits:  54.701273679733276
>Prompt Choice:  counting to solve and think step▁▁to.by to find out how much each of your individual objects cost. Loss: 1.4622883796691895, Mistakes: 0.07999999821186066, Control Loss: 5.638392925262451, Total Loss: 0.19276785850524902
No improvement in the current position. Moving to the next position.
New Control:  counting to solve and think step▁▁to.by to find out how much each of your individual objects cost., New Loss: 0.19276785850524902
Current length: 21
 counting to solve and think step▁▁to.by to find out how much each of your individual objects cost.
Current Loss: 0.19276785850524902 Best Loss: 0.19276785850524902 Best Control:  counting to solve and think step▁▁to.by to find out how much each of your individual objects cost.
Time taken to update solutions:  53.92920804023743
Intersection set size: 5
Candidate tokens:  this., it the
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  this. and, it the
Time taken to get recomputed solution logits:  45.90056300163269
>Prompt Choice:  counting to solve. think step▁▁to.by to find out how much each of your individual objects cost. Loss: 0.5783360600471497, Mistakes: 0.03999999910593033, Control Loss: 5.862101078033447, Total Loss: 0.15724201500415802
Time taken to get recomputed solution logits:  44.920058727264404
>Prompt Choice:  counting to solve, think step▁▁to.by to find out how much each of your individual objects cost. Loss: 1.561879277229309, Mistakes: 0.07999999821186066, Control Loss: 5.535860538482666, Total Loss: 0.1907172054052353
Time taken to get recomputed solution logits:  45.820722341537476
>Prompt Choice:  counting to solve it think step▁▁to.by to find out how much each of your individual objects cost. Loss: 1.148889183998108, Mistakes: 0.07999999821186066, Control Loss: 5.793887138366699, Total Loss: 0.19587773084640503normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

No improvement in the current position. Moving to the next position.
New Control:  counting to solve. think step▁▁to.by to find out how much each of your individual objects cost., New Loss: 0.15724201500415802
Current length: 21
 counting to solve. think step▁▁to.by to find out how much each of your individual objects cost.
Current Loss: 0.15724201500415802 Best Loss: 0.15724201500415802 Best Control:  counting to solve. think step▁▁to.by to find out how much each of your individual objects cost.
Time taken to update solutions:  44.87861633300781
Intersection set size: 5
Candidate tokens:  Here One This  Let
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  Here One This  Let
>>>> Topk increased to 9 <<<<
Intersection set size: 8
Candidate tokens:  Here OneOne This You  Let There
Time taken to get recomputed solution logits:  22.55634379386902
>Prompt Choice:  counting to solve. You step▁▁to.by to find out how much each of your individual objects cost. Loss: 0.7248544096946716, Mistakes: 0.03999999910593033, Control Loss: 5.31350040435791, Total Loss: 0.1462700068950653
Time taken to get recomputed solution logits:  46.75924253463745
>Prompt Choice:  counting to solve.  step▁▁to.by to find out how much each of your individual objects cost. Loss: 1.599693775177002, Mistakes: 0.07999999821186066, Control Loss: 6.519695281982422, Total Loss: 0.21039390563964844
Time taken to get recomputed solution logits:  47.06894326210022
>Prompt Choice:  counting to solve. Let step▁▁to.by to find out how much each of your individual objects cost. Loss: 1.555055022239685, Mistakes: 0.07999999821186066, Control Loss: 5.915804862976074, Total Loss: 0.19831609725952148
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You step▁▁to.by to find out how much each of your individual objects cost., New Loss: 0.1462700068950653
Current length: 21
 counting to solve. You step▁▁to.by to find out how much each of your individual objects cost.
Current Loss: 0.1462700068950653 Best Loss: 0.1462700068950653 Best Control:  counting to solve. You step▁▁to.by to find out how much each of your individual objects cost.
Time taken to update solutions:  21.93702507019043
Intersection set size: 3
Candidate tokens:  need have can
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:  need have can
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  are need don must have can
Time taken to get recomputed solution logits:  27.07228422164917
>Prompt Choice:  counting to solve. You have▁▁to.by to find out how much each of your individual objects cost. Loss: 0.5704299807548523, Mistakes: 0.03999999910593033, Control Loss: 5.0719475746154785, Total Loss: 0.14143894612789154
Time taken to get recomputed solution logits:  23.1262526512146
>Prompt Choice:  counting to solve. You can▁▁to.by to find out how much each of your individual objects cost. Loss: 0.75, Mistakes: 0.03999999910593033, Control Loss: 5.358550548553467, Total Loss: 0.1471710056066513
Time taken to get recomputed solution logits:  26.081505298614502
>Prompt Choice:  counting to solve. You need▁▁to.by to find out how much each of your individual objects cost. Loss: 0.5921764373779297, Mistakes: 0.03999999910593033, Control Loss: 5.032989501953125, Total Loss: 0.14065977931022644
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need▁▁to.by to find out how much each of your individual objects cost., New Loss: 0.14065977931022644
Current length: 21
 counting to solve. You need▁▁to.by to find out how much each of your individual objects cost.
Current Loss: 0.14065977931022644 Best Loss: 0.14065977931022644 Best Control:  counting to solve. You need▁▁to.by to find out how much each of your individual objects cost.
Step:  30 Candidates:  [(0.14065977931022644, ' counting to solve. You need▁▁to.by to find out how much each of your individual objects cost.'), (0.1462700068950653, ' counting to solve. You step▁▁to.by to find out how much each of your individual objects cost.'), (0.15724201500415802, ' counting to solve. think step▁▁to.by to find out how much each of your individual objects cost.'), (0.19276785850524902, ' counting to solve and think step▁▁to.by to find out how much each of your individual objects cost.'), (0.19642162322998047, ' your answer and and think step▁▁to.by to find out how much each of___'), (0.19828206300735474, ' counting answer and and think step▁▁to.by to find out how much each of your individual objects cost.'), (0.22633090615272522, ' your answer and and think step▁▁to.by to find out how much each_'), (0.23293974995613098, ' your answer and and think step▁▁to.by to find out how much each of__'), (0.23343682289123535, ' your answer and and think step▁▁to.by to find out how much each of_'), (0.23757168650627136, ' your answer and and think step▁▁to.by to find out how much each of your_')]
Time taken to update solutions:  25.619714736938477
Intersection set size: 4
Candidate tokens:   to at a
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  to  at a the
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  to one  only at a the
Time taken to get recomputed solution logits:  23.399396657943726
>Prompt Choice:  counting to solve. You need toto.by to find out how much each of your individual objects cost. Loss: 0.6535994410514832, Mistakes: 0.03999999910593033, Control Loss: 5.0916972160339355, Total Loss: 0.14183393120765686
Time taken to get recomputed solution logits:  21.7965407371521
>Prompt Choice:  counting to solve. You need oneto.by to find out how much each of your individual objects cost. Loss: 0.6777126789093018, Mistakes: 0.03999999910593033, Control Loss: 4.969752311706543, Total Loss: 0.13939504325389862
Time taken to get recomputed solution logits:  25.33071994781494
>Prompt Choice:  counting to solve. You need to.by to find out how much each of your individual objects cost. Loss: 0.5996528267860413, Mistakes: 0.03999999910593033, Control Loss: 5.219642639160156, Total Loss: 0.14439284801483154
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto.by to find out how much each of your individual objects cost., New Loss: 0.13939504325389862
Current length: 21
 counting to solve. You need oneto.by to find out how much each of your individual objects cost.
Current Loss: 0.13939504325389862 Best Loss: 0.13939504325389862 Best Control:  counting to solve. You need oneto.by to find out how much each of your individual objects cost.
Time taken to update solutions:  21.166396856307983
Intersection set size: 4
Candidate tokens:  to sentence, by
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to sentence, item object by
Time taken to get recomputed solution logits:  24.027459144592285
>Prompt Choice:  counting to solve. You need one by.by to find out how much each of your individual objects cost. Loss: 2.133655309677124, Mistakes: 0.07999999821186066, Control Loss: 4.930600166320801, Total Loss: 0.17861199378967285
Time taken to get recomputed solution logits:  31.847696542739868
>Prompt Choice:  counting to solve. You need one to.by to find out how much each of your individual objects cost. Loss: 0.6581740379333496, Mistakes: 0.03999999910593033, Control Loss: 4.921113014221191, Total Loss: 0.13842225074768066
Time taken to get recomputed solution logits:  21.931341648101807
>Prompt Choice:  counting to solve. You need oneto.by to find out how much each of your individual objects cost. Loss: 0.6777126789093018, Mistakes: 0.03999999910593033, Control Loss: 4.909638404846191, Total Loss: 0.1381927728652954
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto.by to find out how much each of your individual objects cost., New Loss: 0.1381927728652954
Current length: 21
 counting to solve. You need oneto.by to find out how much each of your individual objects cost.normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Current Loss: 0.1381927728652954 Best Loss: 0.1381927728652954 Best Control:  counting to solve. You need oneto.by to find out how much each of your individual objects cost.
Time taken to update solutions:  21.25240206718445
Intersection set size: 4
Candidate tokens:  oneone count show
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens: . many oneone count show
Time taken to get recomputed solution logits:  24.154173374176025
>Prompt Choice:  counting to solve. You need oneto countby to find out how much each of your individual objects cost. Loss: 0.6166286468505859, Mistakes: 0.03999999910593033, Control Loss: 4.934010028839111, Total Loss: 0.13868018984794617
Time taken to get recomputed solution logits:  21.607401132583618
>Prompt Choice:  counting to solve. You need onetooneby to find out how much each of your individual objects cost. Loss: 0.6077353358268738, Mistakes: 0.03999999910593033, Control Loss: 5.3263444900512695, Total Loss: 0.14652688801288605
Time taken to get recomputed solution logits:  29.560688734054565
>Prompt Choice:  counting to solve. You need oneto showby to find out how much each of your individual objects cost. Loss: 0.5685625672340393, Mistakes: 0.03999999910593033, Control Loss: 5.072353839874268, Total Loss: 0.1414470672607422
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto countby to find out how much each of your individual objects cost., New Loss: 0.13868018984794617
Current length: 21
 counting to solve. You need oneto countby to find out how much each of your individual objects cost.
Current Loss: 0.13868018984794617 Best Loss: 0.1381927728652954 Best Control:  counting to solve. You need oneto.by to find out how much each of your individual objects cost.
Time taken to update solutions:  23.554424285888672
Intersection set size: 3
Candidate tokens:  to. each
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to., each them the
Time taken to get recomputed solution logits:  23.37490463256836
>Prompt Choice:  counting to solve. You need oneto count. to find out how much each of your individual objects cost. Loss: 0.6457805633544922, Mistakes: 0.03999999910593033, Control Loss: 4.985818386077881, Total Loss: 0.13971635699272156
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. to find out how much each of your individual objects cost., New Loss: 0.13971635699272156
Current length: 21
 counting to solve. You need oneto count. to find out how much each of your individual objects cost.
Current Loss: 0.13971635699272156 Best Loss: 0.1381927728652954 Best Control:  counting to solve. You need oneto.by to find out how much each of your individual objects cost.
Time taken to update solutions:  22.7710702419281
Intersection set size: 4
Candidate tokens:  One You  Let
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  One We You I  Let
Time taken to get recomputed solution logits:  37.56856727600098
>Prompt Choice:  counting to solve. You need oneto count. Let find out how much each of your individual objects cost. Loss: 0.6044533252716064, Mistakes: 0.03999999910593033, Control Loss: 5.040902614593506, Total Loss: 0.1408180594444275
Time taken to get recomputed solution logits:  22.780396938323975
>Prompt Choice:  counting to solve. You need oneto count. You find out how much each of your individual objects cost. Loss: 0.7077764868736267, Mistakes: 0.03999999910593033, Control Loss: 4.726929664611816, Total Loss: 0.13453859090805054
Time taken to get recomputed solution logits:  21.368722915649414
>Prompt Choice:  counting to solve. You need oneto count. We find out how much each of your individual objects cost. Loss: 0.6991646885871887, Mistakes: 0.03999999910593033, Control Loss: 4.801593780517578, Total Loss: 0.1360318660736084
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost., New Loss: 0.13453859090805054
Current length: 21
 counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Current Loss: 0.13453859090805054 Best Loss: 0.13453859090805054 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.156780242919922
Intersection set size: 3
Candidate tokens:  need have can
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  are need have count start can
Time taken to get recomputed solution logits:  23.022711038589478
>Prompt Choice:  counting to solve. You need oneto count. You find out how much each of your individual objects cost. Loss: 0.7077764868736267, Mistakes: 0.03999999910593033, Control Loss: 4.455835819244385, Total Loss: 0.1291167140007019
Time taken to get recomputed solution logits:  21.27180767059326
>Prompt Choice:  counting to solve. You need oneto count. You count out how much each of your individual objects cost. Loss: 0.6609811186790466, Mistakes: 0.03999999910593033, Control Loss: 4.846134185791016, Total Loss: 0.136922687292099
Time taken to get recomputed solution logits:  24.046104669570923
>Prompt Choice:  counting to solve. You need oneto count. You start out how much each of your individual objects cost. Loss: 0.6685875058174133, Mistakes: 0.03999999910593033, Control Loss: 5.257820129394531, Total Loss: 0.1451563984155655
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost., New Loss: 0.1291167140007019
Current length: 21
 counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Current Loss: 0.1291167140007019 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.158007383346558
Intersection set size: 4
Candidate tokens:  each a the one
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  that the yourself one a each
Time taken to get recomputed solution logits:  21.6085844039917
>Prompt Choice:  counting to solve. You need oneto count. You find each how much each of your individual objects cost. Loss: 0.7261455655097961, Mistakes: 0.03999999910593033, Control Loss: 5.040849685668945, Total Loss: 0.14081698656082153
Time taken to get recomputed solution logits:  27.98397946357727
>Prompt Choice:  counting to solve. You need oneto count. You find yourself how much each of your individual objects cost. Loss: 0.706378698348999, Mistakes: 0.03999999910593033, Control Loss: 4.951883316040039, Total Loss: 0.13903766870498657
Time taken to get recomputed solution logits:  25.478062629699707
>Prompt Choice:  counting to solve. You need oneto count. You find the how much each of your individual objects cost. Loss: 0.7090388536453247, Mistakes: 0.03999999910593033, Control Loss: 4.916489124298096, Total Loss: 0.13832977414131165
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how much each of your individual objects cost., New Loss: 0.13832977414131165
Current length: 21
 counting to solve. You need oneto count. You find the how much each of your individual objects cost.
Current Loss: 0.13832977414131165 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  24.956813097000122
Intersection set size: 1
Candidate tokens:  items
>>>> Topk increased to 7 <<<<
Intersection set size: 2
Candidate tokens:  first number
>>>> Topk increased to 9 <<<<
Intersection set size: 3
Candidate tokens:  items following number
>>>> Topk increased to 11 <<<<
Intersection set size: 5
Candidate tokens:  words following items word number
>>>> Topk increased to 13 <<<<
Intersection set size: 5normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Candidate tokens:  item following items first number
>>>> Topk increased to 15 <<<<
Intersection set size: 5
Candidate tokens:  following items first word number
>>>> Topk increased to 17 <<<<
Intersection set size: 10
Candidate tokens:  words total following items count answer objects first word number
Time taken to get recomputed solution logits:  21.916476249694824
>Prompt Choice:  counting to solve. You need oneto count. You find the first much each of your individual objects cost. Loss: 2.1671013832092285, Mistakes: 0.07999999821186066, Control Loss: 5.630285739898682, Total Loss: 0.19260570406913757
Time taken to get recomputed solution logits:  26.03877902030945
>Prompt Choice:  counting to solve. You need oneto count. You find the how much each of your individual objects cost. Loss: 0.7090388536453247, Mistakes: 0.03999999910593033, Control Loss: 4.787639617919922, Total Loss: 0.13575279712677002
Time taken to get recomputed solution logits:  21.63972759246826
>Prompt Choice:  counting to solve. You need oneto count. You find the items much each of your individual objects cost. Loss: 0.731656551361084, Mistakes: 0.03999999910593033, Control Loss: 5.640273571014404, Total Loss: 0.15280547738075256
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how much each of your individual objects cost., New Loss: 0.13575279712677002
Current length: 21
 counting to solve. You need oneto count. You find the how much each of your individual objects cost.
Current Loss: 0.13575279712677002 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  24.876302480697632
Intersection set size: 4
Candidate tokens:  to manymany much
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  to. manymany much you man
Time taken to get recomputed solution logits:  25.672180891036987
>Prompt Choice:  counting to solve. You need oneto count. You find the how much each of your individual objects cost. Loss: 0.7090388536453247, Mistakes: 0.03999999910593033, Control Loss: 4.787639617919922, Total Loss: 0.13575279712677002
Time taken to get recomputed solution logits:  27.12403106689453
>Prompt Choice:  counting to solve. You need oneto count. You find the how. each of your individual objects cost. Loss: 2.1275899410247803, Mistakes: 0.07999999821186066, Control Loss: 5.527145862579346, Total Loss: 0.19054290652275085
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. each of your individual objects cost., New Loss: 0.19054290652275085
Current length: 21
 counting to solve. You need oneto count. You find the how. each of your individual objects cost.
Current Loss: 0.19054290652275085 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  25.770833492279053
Intersection set size: 2
Candidate tokens:   You
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  I You many Many
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  Find You I  To
>>>> Topk increased to 11 <<<<
Intersection set size: 9
Candidate tokens:  One How Find You I many Many To
Time taken to get recomputed solution logits:  23.04247736930847
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many of your individual objects cost. Loss: 0.6437027454376221, Mistakes: 0.03999999910593033, Control Loss: 5.681785583496094, Total Loss: 0.15363571047782898
Time taken to get recomputed solution logits:  26.419464349746704
>Prompt Choice:  counting to solve. You need oneto count. You find the how. each of your individual objects cost. Loss: 2.1275899410247803, Mistakes: 0.07999999821186066, Control Loss: 5.650057792663574, Total Loss: 0.1930011510848999
Time taken to get recomputed solution logits:  21.61500835418701
>Prompt Choice:  counting to solve. You need oneto count. You find the how. One of your individual objects cost. Loss: 0.7082503437995911, Mistakes: 0.03999999910593033, Control Loss: 5.93011999130249, Total Loss: 0.15860238671302795
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many of your individual objects cost., New Loss: 0.15363571047782898
Current length: 21
 counting to solve. You need oneto count. You find the how. Many of your individual objects cost.
Current Loss: 0.15363571047782898 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.35785484313965
Intersection set size: 2
Candidate tokens: . are
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens: . are you
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens: . are total do there you
Time taken to get recomputed solution logits:  25.065722227096558
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many you your individual objects cost. Loss: 2.1067569255828857, Mistakes: 0.07999999821186066, Control Loss: 5.696624279022217, Total Loss: 0.19393247365951538
Time taken to get recomputed solution logits:  38.05945372581482
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many do your individual objects cost. Loss: 0.6052325963973999, Mistakes: 0.03999999910593033, Control Loss: 5.336984157562256, Total Loss: 0.1467396765947342
Time taken to get recomputed solution logits:  24.183786630630493
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. your individual objects cost. Loss: 0.6192253828048706, Mistakes: 0.03999999910593033, Control Loss: 5.726212978363037, Total Loss: 0.15452426671981812
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many. your individual objects cost., New Loss: 0.15452426671981812
Current length: 21
 counting to solve. You need oneto count. You find the how. Many. your individual objects cost.
Current Loss: 0.15452426671981812 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  23.699705600738525
Intersection set size: 2
Candidate tokens:   You
>>>> Topk increased to 7 <<<<
Intersection set size: 2
Candidate tokens:   You
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:   There Are You
>>>> Topk increased to 11 <<<<
Intersection set size: 6
Candidate tokens:  You I  Do There Are
Time taken to get recomputed solution logits:  29.453935861587524
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do individual objects cost. Loss: 0.6173897981643677, Mistakes: 0.03999999910593033, Control Loss: 5.711704730987549, Total Loss: 0.15423408150672913
Time taken to get recomputed solution logits:  17.911813974380493
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Are individual objects cost. Loss: 0.8434199094772339, Mistakes: 0.03999999910593033, Control Loss: 5.969167709350586, Total Loss: 0.1593833565711975
Time taken to get recomputed solution logits:  21.334635019302368
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many.  individual objects cost. Loss: 0.7038955688476562, Mistakes: 0.03999999910593033, Control Loss: 6.3161163330078125, Total Loss: 0.16632232069969177
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many. Do individual objects cost., New Loss: 0.15423408150672913
Current length: 21
 counting to solve. You need oneto count. You find the how. Many. Do individual objects cost.
Current Loss: 0.15423408150672913 Best Loss: 0.1291167140007019normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  28.72186303138733
Intersection set size: 5
Candidate tokens: . not I you it
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens: . not I you it
>>>> Topk increased to 9 <<<<
Intersection set size: 8
Candidate tokens:  this. not I we you it the
Time taken to get recomputed solution logits:  32.916555881500244
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do this objects cost. Loss: 2.062648057937622, Mistakes: 0.07999999821186066, Control Loss: 5.873990535736084, Total Loss: 0.19747981429100037
Time taken to get recomputed solution logits:  28.594462633132935
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do the objects cost. Loss: 3.6107242107391357, Mistakes: 0.11999999731779099, Control Loss: 5.599945068359375, Total Loss: 0.23199889063835144
Time taken to get recomputed solution logits:  29.718079566955566
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.5871137976646423, Mistakes: 0.03999999910593033, Control Loss: 5.907714366912842, Total Loss: 0.15815427899360657
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.15815427899360657
Current length: 21
 counting to solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.15815427899360657 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  29.21635341644287
Intersection set size: 4
Candidate tokens:  need understand have count
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  see need know understand have count
Time taken to get recomputed solution logits:  17.587511777877808
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you need cost. Loss: 0.7648671269416809, Mistakes: 0.03999999910593033, Control Loss: 5.479697227478027, Total Loss: 0.14959394931793213
Time taken to get recomputed solution logits:  29.748220443725586
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.5871137976646423, Mistakes: 0.03999999910593033, Control Loss: 5.3967766761779785, Total Loss: 0.14793553948402405
Time taken to get recomputed solution logits:  17.679656744003296
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you count cost. Loss: 0.7468798160552979, Mistakes: 0.03999999910593033, Control Loss: 5.473941326141357, Total Loss: 0.14947882294654846
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.14793553948402405
Current length: 21
 counting to solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.14793553948402405 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  29.09654211997986
Intersection set size: 5
Candidate tokens: . are you have in
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens: . are you have in
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens: . are, you have count in
Time taken to get recomputed solution logits:  29.768794298171997
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.5871137976646423, Mistakes: 0.03999999910593033, Control Loss: 5.3967766761779785, Total Loss: 0.14793553948402405
Time taken to get recomputed solution logits:  16.794025659561157
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects you. Loss: 2.380483388900757, Mistakes: 0.07999999821186066, Control Loss: 5.41521692276001, Total Loss: 0.1883043348789215
Time taken to get recomputed solution logits:  17.78905487060547
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects count. Loss: 2.351573944091797, Mistakes: 0.07999999821186066, Control Loss: 5.378485202789307, Total Loss: 0.18756970763206482
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.14793553948402405
Current length: 21
 counting to solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.14793553948402405 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Step:  45 Candidates:  [(0.1291167140007019, ' counting to solve. You need oneto count. You find out how much each of your individual objects cost.'), (0.13453859090805054, ' counting to solve. You need oneto count. You find out how much each of your individual objects cost.'), (0.13575279712677002, ' counting to solve. You need oneto count. You find the how much each of your individual objects cost.'), (0.1381927728652954, ' counting to solve. You need oneto.by to find out how much each of your individual objects cost.'), (0.13832977414131165, ' counting to solve. You need oneto count. You find the how much each of your individual objects cost.'), (0.13868018984794617, ' counting to solve. You need oneto countby to find out how much each of your individual objects cost.'), (0.13939504325389862, ' counting to solve. You need oneto.by to find out how much each of your individual objects cost.'), (0.13971635699272156, ' counting to solve. You need oneto count. to find out how much each of your individual objects cost.'), (0.14065977931022644, ' counting to solve. You need▁▁to.by to find out how much each of your individual objects cost.'), (0.1462700068950653, ' counting to solve. You step▁▁to.by to find out how much each of your individual objects cost.')]
Time taken to update solutions:  29.135520219802856
Intersection set size: 5
Candidate tokens:  to., money in
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to., money  in
Time taken to get recomputed solution logits:  24.450494527816772
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost money Loss: 1.0874181985855103, Mistakes: 0.1599999964237213, Control Loss: 5.398667812347412, Total Loss: 0.2679733633995056
Time taken to get recomputed solution logits:  29.754693746566772
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.5871137976646423, Mistakes: 0.03999999910593033, Control Loss: 5.3967766761779785, Total Loss: 0.14793553948402405
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.14793553948402405
Current length: 21
 counting to solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.14793553948402405 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  29.022969961166382
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  this the only a your
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:  counting the a your
>>>> Topk increased to 11 <<<<
Intersection set size: 5
Candidate tokens:  this counting your a the
>>>> Topk increased to 13 <<<<
Intersection set size: 8
Candidate tokens:  this counting words the only addition a your
Time taken to get recomputed solution logits:  29.5292649269104
>Prompt Choice:  addition to solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 2.378293752670288, Mistakes: 0.11999999731779099, Control Loss: 5.3979716300964355, Total Loss: 0.22795942425727844normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  29.833671808242798
>Prompt Choice:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.5871137976646423, Mistakes: 0.03999999910593033, Control Loss: 5.3967766761779785, Total Loss: 0.14793553948402405
Time taken to get recomputed solution logits:  21.656860828399658
>Prompt Choice:  words to solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 4.170726299285889, Mistakes: 0.1599999964237213, Control Loss: 5.7070393562316895, Total Loss: 0.27414077520370483
No improvement in the current position. Moving to the next position.
New Control:  counting to solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.14793553948402405
Current length: 21
 counting to solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.14793553948402405 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  29.159306049346924
Intersection set size: 2
Candidate tokens:  to.
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  to. words method
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  to and. skills words principles principle
Time taken to get recomputed solution logits:  28.957228422164917
>Prompt Choice:  counting skills solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 2.085171937942505, Mistakes: 0.07999999821186066, Control Loss: 5.7666144371032715, Total Loss: 0.19533228874206543
Time taken to get recomputed solution logits:  29.02008557319641
>Prompt Choice:  counting principle solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.6140468716621399, Mistakes: 0.03999999910593033, Control Loss: 6.057586193084717, Total Loss: 0.161151722073555
Time taken to get recomputed solution logits:  30.201385259628296
>Prompt Choice:  counting principles solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.6279740333557129, Mistakes: 0.03999999910593033, Control Loss: 6.144636631011963, Total Loss: 0.16289272904396057
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.161151722073555
Current length: 21
 counting principle solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.161151722073555 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  28.064380168914795
Intersection set size: 5
Candidate tokens:  of to. and 
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  of to. and,  for
Time taken to get recomputed solution logits:  33.47368860244751
>Prompt Choice:  counting principle . You need oneto count. You find the how. Many. Do you objects cost. Loss: 1.5583394765853882, Mistakes: 0.07999999821186066, Control Loss: 6.599017143249512, Total Loss: 0.21198034286499023
Time taken to get recomputed solution logits:  31.710752487182617
>Prompt Choice:  counting principle of. You need oneto count. You find the how. Many. Do you objects cost. Loss: 2.3445351123809814, Mistakes: 0.07999999821186066, Control Loss: 6.106176376342773, Total Loss: 0.2021235227584839
Time taken to get recomputed solution logits:  28.87416672706604
>Prompt Choice:  counting principle solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.6140468716621399, Mistakes: 0.03999999910593033, Control Loss: 6.1330695152282715, Total Loss: 0.1626613885164261
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.1626613885164261
Current length: 21
 counting principle solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.1626613885164261 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  28.01946449279785
Intersection set size: 5
Candidate tokens:  this. it for the
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  this. and problem it for the
Time taken to get recomputed solution logits:  29.021162509918213
>Prompt Choice:  counting principle solve. You need oneto count. You find the how. Many. Do you objects cost. Loss: 0.6140468716621399, Mistakes: 0.03999999910593033, Control Loss: 6.1330695152282715, Total Loss: 0.1626613885164261
Time taken to get recomputed solution logits:  33.33550405502319
>Prompt Choice:  counting principle solve it You need oneto count. You find the how. Many. Do you objects cost. Loss: 3.1157379150390625, Mistakes: 0.1599999964237213, Control Loss: 6.300405502319336, Total Loss: 0.2860081195831299
Time taken to get recomputed solution logits:  30.826585054397583
>Prompt Choice:  counting principle solve for You need oneto count. You find the how. Many. Do you objects cost. Loss: 6.696127891540527, Mistakes: 0.23999999463558197, Control Loss: 5.978214740753174, Total Loss: 0.35956430435180664
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve. You need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.1626613885164261
Current length: 21
 counting principle solve. You need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.1626613885164261 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  28.183662176132202
Intersection set size: 4
Candidate tokens:   This Using The
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  What This Using The  There
Time taken to get recomputed solution logits:  44.192156076431274
>Prompt Choice:  counting principle solve. What need oneto count. You find the how. Many. Do you objects cost. Loss: 2.4485936164855957, Mistakes: 0.11999999731779099, Control Loss: 6.357886791229248, Total Loss: 0.2471577227115631
Time taken to get recomputed solution logits:  36.03275680541992
>Prompt Choice:  counting principle solve.  need oneto count. You find the how. Many. Do you objects cost. Loss: 0.6229041218757629, Mistakes: 0.03999999910593033, Control Loss: 7.150746822357178, Total Loss: 0.18301492929458618
Time taken to get recomputed solution logits:  34.15557551383972
>Prompt Choice:  counting principle solve. There need oneto count. You find the how. Many. Do you objects cost. Loss: 2.1282033920288086, Mistakes: 0.07999999821186066, Control Loss: 6.876595497131348, Total Loss: 0.21753190457820892
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.  need oneto count. You find the how. Many. Do you objects cost., New Loss: 0.18301492929458618
Current length: 21
 counting principle solve.  need oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.18301492929458618 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  33.166765213012695
Intersection set size: 3
Candidate tokens: TheThisYou
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens: thisTheThisYou
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens: WeItTheThisHow
>>>> Topk increased to 11 <<<<
Intersection set size: 7
Candidate tokens: ThethisLetItHowThisYou
Time taken to get recomputed solution logits:  34.1597421169281
>Prompt Choice:  counting principle solve.▁▁need oneto count. You find the how. Many. Do you objects cost. Loss: 0.6128086447715759, Mistakes: 0.03999999910593033, Control Loss: 6.663094520568848, Total Loss: 0.1732618808746338normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  32.99899959564209
>Prompt Choice:  counting principle solve.▁▁You oneto count. You find the how. Many. Do you objects cost. Loss: 0.644253671169281, Mistakes: 0.03999999910593033, Control Loss: 6.49880838394165, Total Loss: 0.16997617483139038
Time taken to get recomputed solution logits:  26.110625743865967
>Prompt Choice:  counting principle solve.▁▁It oneto count. You find the how. Many. Do you objects cost. Loss: 2.1057496070861816, Mistakes: 0.07999999821186066, Control Loss: 6.798286437988281, Total Loss: 0.21596571803092957
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You oneto count. You find the how. Many. Do you objects cost., New Loss: 0.16997617483139038
Current length: 21
 counting principle solve.▁▁You oneto count. You find the how. Many. Do you objects cost.
Current Loss: 0.16997617483139038 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  32.38098382949829
Intersection set size: 2
Candidate tokens:  can have
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  need are have can
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  are need don also have can
Time taken to get recomputed solution logits:  33.59953498840332
>Prompt Choice:  counting principle solve.▁▁You donto count. You find the how. Many. Do you objects cost. Loss: 3.868572235107422, Mistakes: 0.1599999964237213, Control Loss: 6.486941337585449, Total Loss: 0.28973883390426636
Time taken to get recomputed solution logits:  36.20962715148926
>Prompt Choice:  counting principle solve.▁▁You needto count. You find the how. Many. Do you objects cost. Loss: 3.4208388328552246, Mistakes: 0.1599999964237213, Control Loss: 6.378340244293213, Total Loss: 0.28756678104400635
Time taken to get recomputed solution logits:  33.407888650894165
>Prompt Choice:  counting principle solve.▁▁You haveto count. You find the how. Many. Do you objects cost. Loss: 1.5998307466506958, Mistakes: 0.07999999821186066, Control Loss: 6.434323787689209, Total Loss: 0.2086864709854126
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You haveto count. You find the how. Many. Do you objects cost., New Loss: 0.2086864709854126
Current length: 21
 counting principle solve.▁▁You haveto count. You find the how. Many. Do you objects cost.
Current Loss: 0.2086864709854126 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  32.759785890579224
Intersection set size: 5
Candidate tokens:  to one  a the
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  to one  a the
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  to one  a the an
Time taken to get recomputed solution logits:  35.74650239944458
>Prompt Choice:  counting principle solve.▁▁You have the count. You find the how. Many. Do you objects cost. Loss: 6.388391017913818, Mistakes: 0.23999999463558197, Control Loss: 5.956948280334473, Total Loss: 0.35913896560668945
Time taken to get recomputed solution logits:  34.26754379272461
>Prompt Choice:  counting principle solve.▁▁You have to count. You find the how. Many. Do you objects cost. Loss: 1.5865495204925537, Mistakes: 0.07999999821186066, Control Loss: 5.9883646965026855, Total Loss: 0.19976729154586792
Time taken to get recomputed solution logits:  26.684922456741333
>Prompt Choice:  counting principle solve.▁▁You have one count. You find the how. Many. Do you objects cost. Loss: 6.464863300323486, Mistakes: 0.23999999463558197, Control Loss: 6.13472843170166, Total Loss: 0.36269456148147583
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count. You find the how. Many. Do you objects cost., New Loss: 0.19976729154586792
Current length: 21
 counting principle solve.▁▁You have to count. You find the how. Many. Do you objects cost.
Current Loss: 0.19976729154586792 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  33.90940999984741
Intersection set size: 3
Candidate tokens:  list explain count
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  list use explain count
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  use list explain count show write
Time taken to get recomputed solution logits:  34.62868547439575
>Prompt Choice:  counting principle solve.▁▁You have to count. You find the how. Many. Do you objects cost. Loss: 1.5865495204925537, Mistakes: 0.07999999821186066, Control Loss: 5.593918800354004, Total Loss: 0.19187837839126587
Time taken to get recomputed solution logits:  35.044774532318115
>Prompt Choice:  counting principle solve.▁▁You have to list. You find the how. Many. Do you objects cost. Loss: 1.726317286491394, Mistakes: 0.07999999821186066, Control Loss: 5.643382549285889, Total Loss: 0.19286763668060303
Time taken to get recomputed solution logits:  42.72702622413635
>Prompt Choice:  counting principle solve.▁▁You have to use. You find the how. Many. Do you objects cost. Loss: 6.356380462646484, Mistakes: 0.23999999463558197, Control Loss: 5.564695835113525, Total Loss: 0.3512939214706421
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count. You find the how. Many. Do you objects cost., New Loss: 0.19187837839126587
Current length: 21
 counting principle solve.▁▁You have to count. You find the how. Many. Do you objects cost.
Current Loss: 0.19187837839126587 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  34.054999589920044
Intersection set size: 4
Candidate tokens:  all the each every
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  all the everything one them each every
Time taken to get recomputed solution logits:  46.39537048339844
>Prompt Choice:  counting principle solve.▁▁You have to count everything You find the how. Many. Do you objects cost. Loss: 3.0500001907348633, Mistakes: 0.1599999964237213, Control Loss: 5.756076812744141, Total Loss: 0.2751215398311615
Time taken to get recomputed solution logits:  27.165753602981567
>Prompt Choice:  counting principle solve.▁▁You have to count the You find the how. Many. Do you objects cost. Loss: 5.072662353515625, Mistakes: 0.19999998807907104, Control Loss: 6.12667179107666, Total Loss: 0.32253342866897583
Time taken to get recomputed solution logits:  27.89155125617981
>Prompt Choice:  counting principle solve.▁▁You have to count one You find the how. Many. Do you objects cost. Loss: 5.065635681152344, Mistakes: 0.19999998807907104, Control Loss: 6.0600199699401855, Total Loss: 0.3212003707885742
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything You find the how. Many. Do you objects cost., New Loss: 0.2751215398311615
Current length: 21
 counting principle solve.▁▁You have to count everything You find the how. Many. Do you objects cost.
!!!!Rejecting new control originally, changed !!!!
Current Loss: 0.2751215398311615 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  45.702378273010254
Intersection set size: 4
Candidate tokens: . separately, individually
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens: . and, one individually
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens: . and separately, individually one innormalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  37.60816955566406
>Prompt Choice:  counting principle solve.▁▁You have to count everything separately find the how. Many. Do you objects cost. Loss: 5.239652633666992, Mistakes: 0.23999999463558197, Control Loss: 5.866140842437744, Total Loss: 0.3573228120803833
Time taken to get recomputed solution logits:  43.45589804649353
>Prompt Choice:  counting principle solve.▁▁You have to count everything. find the how. Many. Do you objects cost. Loss: 3.2927050590515137, Mistakes: 0.1599999964237213, Control Loss: 6.009339809417725, Total Loss: 0.2801867723464966
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. find the how. Many. Do you objects cost., New Loss: 0.2801867723464966
Current length: 21
 counting principle solve.▁▁You have to count everything. find the how. Many. Do you objects cost.
Current Loss: 0.2801867723464966 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  42.78772497177124
Intersection set size: 3
Candidate tokens:   Let One
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:   Let One Each
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  One Each This I You  Let
Time taken to get recomputed solution logits:  40.755220890045166
>Prompt Choice:  counting principle solve.▁▁You have to count everything. Let the how. Many. Do you objects cost. Loss: 1.4709373712539673, Mistakes: 0.07999999821186066, Control Loss: 6.044605731964111, Total Loss: 0.2008921205997467
Time taken to get recomputed solution logits:  36.19240117073059
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost. Loss: 0.6606634855270386, Mistakes: 0.03999999910593033, Control Loss: 6.054188251495361, Total Loss: 0.16108375787734985
Time taken to get recomputed solution logits:  41.05778694152832
>Prompt Choice:  counting principle solve.▁▁You have to count everything. You the how. Many. Do you objects cost. Loss: 3.8645076751708984, Mistakes: 0.19999998807907104, Control Loss: 6.104207992553711, Total Loss: 0.32208412885665894
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost., New Loss: 0.16108375787734985
Current length: 21
 counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost.
Current Loss: 0.16108375787734985 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  35.71432089805603
Intersection set size: 5
Candidate tokens:  isn includes problem is means
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  includes problem isn is means
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  includes requires problem involves isn is means
Time taken to get recomputed solution logits:  36.17511343955994
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost. Loss: 0.6606634855270386, Mistakes: 0.03999999910593033, Control Loss: 5.631139278411865, Total Loss: 0.152622789144516
Time taken to get recomputed solution logits:  37.392571210861206
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This involves how. Many. Do you objects cost. Loss: 5.092535495758057, Mistakes: 0.19999998807907104, Control Loss: 5.640422344207764, Total Loss: 0.31280842423439026
Time taken to get recomputed solution logits:  36.634140968322754
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This requires how. Many. Do you objects cost. Loss: 2.448909282684326, Mistakes: 0.11999999731779099, Control Loss: 5.865272521972656, Total Loss: 0.2373054474592209
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost., New Loss: 0.152622789144516
Current length: 21
 counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost.
Current Loss: 0.152622789144516 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  35.45396614074707
Intersection set size: 4
Candidate tokens:  counting answer way question
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  counting answer way same question
>>>> Topk increased to 9 <<<<
Intersection set size: 8
Candidate tokens:  counting answer way problem same only question type
Time taken to get recomputed solution logits:  35.92833495140076
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost. Loss: 0.6606634855270386, Mistakes: 0.03999999910593033, Control Loss: 5.631139278411865, Total Loss: 0.152622789144516
Time taken to get recomputed solution logits:  28.890952587127686
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the counting. Many. Do you objects cost. Loss: 1.5640939474105835, Mistakes: 0.07999999821186066, Control Loss: 6.273413181304932, Total Loss: 0.20546825230121613
Time taken to get recomputed solution logits:  25.743734121322632
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the only. Many. Do you objects cost. Loss: 2.5312864780426025, Mistakes: 0.11999999731779099, Control Loss: 6.036672115325928, Total Loss: 0.24073344469070435
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost., New Loss: 0.152622789144516
Current length: 21
 counting principle solve.▁▁You have to count everything. This the how. Many. Do you objects cost.
Current Loss: 0.152622789144516 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Step:  60 Candidates:  [(0.1291167140007019, ' counting to solve. You need oneto count. You find out how much each of your individual objects cost.'), (0.13453859090805054, ' counting to solve. You need oneto count. You find out how much each of your individual objects cost.'), (0.13575279712677002, ' counting to solve. You need oneto count. You find the how much each of your individual objects cost.'), (0.1381927728652954, ' counting to solve. You need oneto.by to find out how much each of your individual objects cost.'), (0.13832977414131165, ' counting to solve. You need oneto count. You find the how much each of your individual objects cost.'), (0.13868018984794617, ' counting to solve. You need oneto countby to find out how much each of your individual objects cost.'), (0.13939504325389862, ' counting to solve. You need oneto.by to find out how much each of your individual objects cost.'), (0.13971635699272156, ' counting to solve. You need oneto count. to find out how much each of your individual objects cost.'), (0.14065977931022644, ' counting to solve. You need▁▁to.by to find out how much each of your individual objects cost.'), (0.1462700068950653, ' counting to solve. You step▁▁to.by to find out how much each of your individual objects cost.')]
Time taken to update solutions:  35.45829486846924
Intersection set size: 5
Candidate tokens:  to many I you it
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  to many I we you it the
Time taken to get recomputed solution logits:  31.27882170677185
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how many Many. Do you objects cost. Loss: 2.5008089542388916, Mistakes: 0.11999999731779099, Control Loss: 6.2671332359313965, Total Loss: 0.2453426718711853normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  30.964078187942505
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to Many. Do you objects cost. Loss: 1.5836340188980103, Mistakes: 0.07999999821186066, Control Loss: 6.139681816101074, Total Loss: 0.20279362797737122
Time taken to get recomputed solution logits:  33.74154043197632
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how the Many. Do you objects cost. Loss: 1.516756534576416, Mistakes: 0.07999999821186066, Control Loss: 6.171774387359619, Total Loss: 0.203435480594635
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how to Many. Do you objects cost., New Loss: 0.20279362797737122
Current length: 21
 counting principle solve.▁▁You have to count everything. This the how to Many. Do you objects cost.
Current Loss: 0.20279362797737122 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  30.269894123077393
Intersection set size: 5
Candidate tokens: . use solve do count
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens: . use solve do count for write
Time taken to get recomputed solution logits:  30.97109889984131
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to Many. Do you objects cost. Loss: 1.5836340188980103, Mistakes: 0.07999999821186066, Control Loss: 5.948461055755615, Total Loss: 0.19896921515464783
Time taken to get recomputed solution logits:  32.187559843063354
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to do. Do you objects cost. Loss: 3.8917388916015625, Mistakes: 0.1599999964237213, Control Loss: 6.06337833404541, Total Loss: 0.28126755356788635
Time taken to get recomputed solution logits:  31.421221494674683
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost. Loss: 2.696962833404541, Mistakes: 0.11999999731779099, Control Loss: 6.494253635406494, Total Loss: 0.24988505244255066
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost., New Loss: 0.24988505244255066
Current length: 20
 counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost.
Current Loss: 0.24988505244255066 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  43.89930033683777
Intersection set size: 4
Candidate tokens:   counting Counting I
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  counting Counting I 
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  countingcounting The Counting You I 
Time taken to get recomputed solution logits:  44.7664897441864
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost. Loss: 3.244546413421631, Mistakes: 0.1599999964237213, Control Loss: 5.844758033752441, Total Loss: 0.2768951654434204
Time taken to get recomputed solution logits:  27.694138765335083
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. The you objects cost. Loss: 4.25868034362793, Mistakes: 0.19999998807907104, Control Loss: 6.031960964202881, Total Loss: 0.3206391930580139
Time taken to get recomputed solution logits:  27.724496603012085
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. I you objects cost. Loss: 5.216474533081055, Mistakes: 0.23999999463558197, Control Loss: 6.227846622467041, Total Loss: 0.3645569086074829
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost., New Loss: 0.2768951654434204
Current length: 20
 counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost.
Current Loss: 0.2768951654434204 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  43.79974842071533
Intersection set size: 4
Candidate tokens:  this you it not
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  this not I you it
>>>> Topk increased to 9 <<<<
Intersection set size: 9
Candidate tokens:  this not one I  we you it the
Time taken to get recomputed solution logits:  57.153022050857544
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do this objects cost. Loss: 3.8595147132873535, Mistakes: 0.19999998807907104, Control Loss: 5.823254108428955, Total Loss: 0.3164650797843933
Time taken to get recomputed solution logits:  44.54097533226013
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost. Loss: 3.244546413421631, Mistakes: 0.1599999964237213, Control Loss: 5.844758033752441, Total Loss: 0.2768951654434204
Time taken to get recomputed solution logits:  41.54447650909424
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do the objects cost. Loss: 3.9993793964385986, Mistakes: 0.19999998807907104, Control Loss: 5.669839859008789, Total Loss: 0.31339678168296814
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost., New Loss: 0.2768951654434204
Current length: 20
 counting principle solve.▁▁You have to count everything. This the how to.. Do you objects cost.
Current Loss: 0.2768951654434204 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  43.6560845375061
Intersection set size: 4
Candidate tokens:  know want understand have
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  see need know want understand have count
Time taken to get recomputed solution logits:  27.400774002075195
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you want cost. Loss: 4.404688835144043, Mistakes: 0.19999998807907104, Control Loss: 5.957442760467529, Total Loss: 0.31914883852005005
Time taken to get recomputed solution logits:  28.58399271965027
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need cost. Loss: 4.317196846008301, Mistakes: 0.19999998807907104, Control Loss: 5.865304470062256, Total Loss: 0.3173060715198517
Time taken to get recomputed solution logits:  26.38429355621338
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you understand cost. Loss: 6.944593906402588, Mistakes: 0.2800000011920929, Control Loss: 5.988635540008545, Total Loss: 0.3997727036476135
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need cost., New Loss: 0.3173060715198517
Current length: 20
 counting principle solve.▁▁You have to count everything. This the how to.. Do you need cost.
Current Loss: 0.3173060715198517 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  27.901689529418945
Intersection set size: 5
Candidate tokens:  to me help more a
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  to any me help more a the
Time taken to get recomputed solution logits:  29.93075680732727
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 3.2547154426574707, Mistakes: 0.1599999964237213, Control Loss: 5.55176305770874, Total Loss: 0.27103525400161743normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  26.228851318359375
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need any. Loss: 4.429731845855713, Mistakes: 0.19999998807907104, Control Loss: 5.578970432281494, Total Loss: 0.3115794062614441
Time taken to get recomputed solution logits:  25.86835503578186
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need more. Loss: 5.12656307220459, Mistakes: 0.23999999463558197, Control Loss: 5.547106742858887, Total Loss: 0.35094213485717773
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need me., New Loss: 0.27103525400161743
Current length: 20
 counting principle solve.▁▁You have to count everything. This the how to.. Do you need me.
Current Loss: 0.27103525400161743 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  29.30989360809326
Intersection set size: 4
Candidate tokens:  to explain too write
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  to tell help do explain too write
Time taken to get recomputed solution logits:  29.91380524635315
>Prompt Choice:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 3.2547154426574707, Mistakes: 0.1599999964237213, Control Loss: 5.003429889678955, Total Loss: 0.2600685954093933
No improvement in the current position. Moving to the next position.
New Control:  counting principle solve.▁▁You have to count everything. This the how to.. Do you need me., New Loss: 0.2600685954093933
Current length: 20
 counting principle solve.▁▁You have to count everything. This the how to.. Do you need me.
Current Loss: 0.2600685954093933 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  29.288893938064575
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  this counting the a your
>>>> Topk increased to 9 <<<<
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 11 <<<<
Intersection set size: 6
Candidate tokens:  this the complete simple a your
Time taken to get recomputed solution logits:  29.783507347106934
>Prompt Choice:  complete principle solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 5.996096134185791, Mistakes: 0.23999999463558197, Control Loss: 5.5750932693481445, Total Loss: 0.35150185227394104
Time taken to get recomputed solution logits:  23.546911001205444
>Prompt Choice:  simple principle solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 4.235939979553223, Mistakes: 0.1599999964237213, Control Loss: 5.601712226867676, Total Loss: 0.272034227848053
Time taken to get recomputed solution logits:  23.987817525863647
>Prompt Choice:  this principle solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 6.015629291534424, Mistakes: 0.23999999463558197, Control Loss: 5.113773345947266, Total Loss: 0.3422754406929016
No improvement in the current position. Moving to the next position.
New Control:  simple principle solve.▁▁You have to count everything. This the how to.. Do you need me., New Loss: 0.272034227848053
Current length: 20
 simple principle solve.▁▁You have to count everything. This the how to.. Do you need me.
Current Loss: 0.272034227848053 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.879656076431274
Intersection set size: 4
Candidate tokens:  math counting words addition
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  math counting words language terms
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  math counting words language terms
>>>> Topk increased to 11 <<<<
Intersection set size: 9
Candidate tokens:  arithmetic math counting words language wording terms addition maths
Time taken to get recomputed solution logits:  22.67188262939453
>Prompt Choice:  simple words solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 7.050788879394531, Mistakes: 0.2800000011920929, Control Loss: 5.800857067108154, Total Loss: 0.3960171341896057
Time taken to get recomputed solution logits:  22.200790405273438
>Prompt Choice:  simple wording solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 8.303136825561523, Mistakes: 0.3199999928474426, Control Loss: 5.874677658081055, Total Loss: 0.43749353289604187
Time taken to get recomputed solution logits:  23.699659824371338
>Prompt Choice:  simple terms solve.▁▁You have to count everything. This the how to.. Do you need me. Loss: 5.067200660705566, Mistakes: 0.19999998807907104, Control Loss: 5.848077297210693, Total Loss: 0.31696152687072754
No improvement in the current position. Moving to the next position.
New Control:  simple terms solve.▁▁You have to count everything. This the how to.. Do you need me., New Loss: 0.31696152687072754
Current length: 20
 simple terms solve.▁▁You have to count everything. This the how to.. Do you need me.
Current Loss: 0.31696152687072754 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  23.141050577163696
Intersection set size: 5
Candidate tokens:  to. and  for
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  to. and,  for please
Time taken to get recomputed solution logits:  23.03184747695923
>Prompt Choice:  simple terms please.▁▁You have to count everything. This the how to.. Do you need me. Loss: 6.125787734985352, Mistakes: 0.23999999463558197, Control Loss: 5.25549840927124, Total Loss: 0.3451099693775177
Time taken to get recomputed solution logits:  22.935063123703003
>Prompt Choice:  simple terms..▁▁You have to count everything. This the how to.. Do you need me. Loss: 6.1265692710876465, Mistakes: 0.23999999463558197, Control Loss: 5.7947163581848145, Total Loss: 0.3558943271636963
Time taken to get recomputed solution logits:  22.803571462631226
>Prompt Choice:  simple terms for.▁▁You have to count everything. This the how to.. Do you need me. Loss: 4.958595275878906, Mistakes: 0.19999998807907104, Control Loss: 5.2725830078125, Total Loss: 0.3054516315460205
No improvement in the current position. Moving to the next position.
New Control:  simple terms for.▁▁You have to count everything. This the how to.. Do you need me., New Loss: 0.3054516315460205
Current length: 20
 simple terms for.▁▁You have to count everything. This the how to.. Do you need me.
Current Loss: 0.3054516315460205 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.17944049835205
Intersection set size: 5
Candidate tokens:  the explanation a your an
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  the explanation a your an
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  the explanation me your a children an
Time taken to get recomputed solution logits:  22.919220447540283
>Prompt Choice:  simple terms for.▁▁You have to count everything. This the how to.. Do you need me. Loss: 4.958595275878906, Mistakes: 0.19999998807907104, Control Loss: 4.8240156173706055, Total Loss: 0.29648029804229736
Time taken to get recomputed solution logits:  23.134334564208984
>Prompt Choice:  simple terms for an▁▁You have to count everything. This the how to.. Do you need me. Loss: 4.955470085144043, Mistakes: 0.19999998807907104, Control Loss: 5.594508171081543, Total Loss: 0.3118901550769806normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  24.037472009658813
>Prompt Choice:  simple terms for a▁▁You have to count everything. This the how to.. Do you need me. Loss: 4.991407871246338, Mistakes: 0.19999998807907104, Control Loss: 5.438473224639893, Total Loss: 0.30876946449279785
No improvement in the current position. Moving to the next position.
New Control:  simple terms for.▁▁You have to count everything. This the how to.. Do you need me., New Loss: 0.29648029804229736
Current length: 20
 simple terms for.▁▁You have to count everything. This the how to.. Do you need me.
Current Loss: 0.29648029804229736 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.24514937400818
Intersection set size: 2
Candidate tokens:   a
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:   A a I
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  countingcounting A I a a
Time taken to get recomputed solution logits:  23.737515687942505
>Prompt Choice:  simple terms for. countingYou have to count everything. This the how to.. Do you need me. Loss: 5.079723834991455, Mistakes: 0.19999998807907104, Control Loss: 5.471019268035889, Total Loss: 0.3094203770160675
Time taken to get recomputed solution logits:  23.558398723602295
>Prompt Choice:  simple terms for.countingYou have to count everything. This the how to.. Do you need me. Loss: 5.071911334991455, Mistakes: 0.19999998807907104, Control Loss: 5.476229667663574, Total Loss: 0.3095245957374573
Time taken to get recomputed solution logits:  23.024730443954468
>Prompt Choice:  simple terms for. IYou have to count everything. This the how to.. Do you need me. Loss: 4.958594799041748, Mistakes: 0.19999998807907104, Control Loss: 4.9362473487854, Total Loss: 0.2987249493598938
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou have to count everything. This the how to.. Do you need me., New Loss: 0.2987249493598938
Current length: 20
 simple terms for. IYou have to count everything. This the how to.. Do you need me.
Current Loss: 0.2987249493598938 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.302628993988037
Intersection set size: 4
Candidate tokens: . havecount count
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens: . havecount count
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens: .have havecount countYou
Time taken to get recomputed solution logits:  22.96038579940796
>Prompt Choice:  simple terms for. IYou have to count everything. This the how to.. Do you need me. Loss: 4.958594799041748, Mistakes: 0.19999998807907104, Control Loss: 5.012333393096924, Total Loss: 0.3002466559410095
Time taken to get recomputed solution logits:  25.884552478790283
>Prompt Choice:  simple terms for. Icount have to count everything. This the how to.. Do you need me. Loss: 6.4234442710876465, Mistakes: 0.23999999463558197, Control Loss: 5.2968292236328125, Total Loss: 0.3459365665912628
Time taken to get recomputed solution logits:  23.609352350234985
>Prompt Choice:  simple terms for. I count have to count everything. This the how to.. Do you need me. Loss: 5.508595943450928, Mistakes: 0.19999998807907104, Control Loss: 5.332916259765625, Total Loss: 0.3066583275794983
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou have to count everything. This the how to.. Do you need me., New Loss: 0.3002466559410095
Current length: 20
 simple terms for. IYou have to count everything. This the how to.. Do you need me.
Current Loss: 0.3002466559410095 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.23097062110901
Intersection set size: 5
Candidate tokens: . are have answer can
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens: . are need have answer can
Time taken to get recomputed solution logits:  22.88406467437744
>Prompt Choice:  simple terms for. IYou need to count everything. This the how to.. Do you need me. Loss: 4.954689025878906, Mistakes: 0.19999998807907104, Control Loss: 4.7936272621154785, Total Loss: 0.2958725392818451
Time taken to get recomputed solution logits:  23.017019271850586
>Prompt Choice:  simple terms for. IYou can to count everything. This the how to.. Do you need me. Loss: 4.989067077636719, Mistakes: 0.19999998807907104, Control Loss: 5.306902885437012, Total Loss: 0.3061380386352539
Time taken to get recomputed solution logits:  23.194583415985107
>Prompt Choice:  simple terms for. IYou. to count everything. This the how to.. Do you need me. Loss: 7.470315933227539, Mistakes: 0.2800000011920929, Control Loss: 5.653224468231201, Total Loss: 0.3930644989013672
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need to count everything. This the how to.. Do you need me., New Loss: 0.2958725392818451
Current length: 20
 simple terms for. IYou need to count everything. This the how to.. Do you need me.
Current Loss: 0.2958725392818451 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.345348834991455
Intersection set size: 4
Candidate tokens:   to help a
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to. help  more a
Time taken to get recomputed solution logits:  24.43047022819519
>Prompt Choice:  simple terms for. IYou need more count everything. This the how to.. Do you need me. Loss: 4.971883296966553, Mistakes: 0.19999998807907104, Control Loss: 5.128407001495361, Total Loss: 0.30256813764572144
Time taken to get recomputed solution logits:  22.981537342071533
>Prompt Choice:  simple terms for. IYou need to count everything. This the how to.. Do you need me. Loss: 4.954689025878906, Mistakes: 0.19999998807907104, Control Loss: 4.888835430145264, Total Loss: 0.2977766990661621
Time taken to get recomputed solution logits:  25.099695920944214
>Prompt Choice:  simple terms for. IYou need help count everything. This the how to.. Do you need me. Loss: 2.4640634059906006, Mistakes: 0.11999999731779099, Control Loss: 5.170886993408203, Total Loss: 0.223417729139328
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count everything. This the how to.. Do you need me., New Loss: 0.223417729139328
Current length: 20
 simple terms for. IYou need help count everything. This the how to.. Do you need me.
Current Loss: 0.223417729139328 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Step:  75 Candidates:  [(0.1291167140007019, ' counting to solve. You need oneto count. You find out how much each of your individual objects cost.'), (0.13453859090805054, ' counting to solve. You need oneto count. You find out how much each of your individual objects cost.'), (0.13575279712677002, ' counting to solve. You need oneto count. You find the how much each of your individual objects cost.'), (0.1381927728652954, ' counting to solve. You need oneto.by to find out how much each of your individual objects cost.'), (0.13832977414131165, ' counting to solve. You need oneto count. You find the how much each of your individual objects cost.'), (0.13868018984794617, ' counting to solve. You need oneto countby to find out how much each of your individual objects cost.'), (0.13939504325389862, ' counting to solve. You need oneto.by to find out how much each of your individual objects cost.'), (0.13971635699272156, ' counting to solve. You need oneto count. to find out how much each of your individual objects cost.'), (0.14065977931022644, ' counting to solve. You need▁▁to.by to find out how much each of your individual objects cost.'), (0.1462700068950653, ' counting to solve. You step▁▁to.by to find out how much each of your individual objects cost.')]normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to update solutions:  24.45680332183838
Intersection set size: 5
Candidate tokens: . counting with understanding figuring
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to. with counting figuring understanding
Time taken to get recomputed solution logits:  25.277714014053345
>Prompt Choice:  simple terms for. IYou need help counting everything. This the how to.. Do you need me. Loss: 2.497657299041748, Mistakes: 0.11999999731779099, Control Loss: 5.470870494842529, Total Loss: 0.22941741347312927
Time taken to get recomputed solution logits:  25.077040672302246
>Prompt Choice:  simple terms for. IYou need help count everything. This the how to.. Do you need me. Loss: 2.4640634059906006, Mistakes: 0.11999999731779099, Control Loss: 5.362717628479004, Total Loss: 0.22725434601306915
Time taken to get recomputed solution logits:  24.988344192504883
>Prompt Choice:  simple terms for. IYou need help understanding everything. This the how to.. Do you need me. Loss: 4.83672571182251, Mistakes: 0.19999998807907104, Control Loss: 5.583706855773926, Total Loss: 0.3116741180419922
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count everything. This the how to.. Do you need me., New Loss: 0.22725434601306915
Current length: 20
 simple terms for. IYou need help count everything. This the how to.. Do you need me.
Current Loss: 0.22725434601306915 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  24.312206983566284
Intersection set size: 5
Candidate tokens: ng. themin the
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens: ng. themingsin the
Time taken to get recomputed solution logits:  24.469275951385498
>Prompt Choice:  simple terms for. IYou need help countng. This the how to.. Do you need me. Loss: 3.271094799041748, Mistakes: 0.1599999964237213, Control Loss: 5.294455051422119, Total Loss: 0.26588910818099976
Time taken to get recomputed solution logits:  24.75533437728882
>Prompt Choice:  simple terms for. IYou need help count the. This the how to.. Do you need me. Loss: 4.56171989440918, Mistakes: 0.19999998807907104, Control Loss: 5.4272685050964355, Total Loss: 0.3085453510284424
Time taken to get recomputed solution logits:  27.125027656555176
>Prompt Choice:  simple terms for. IYou need help count.. This the how to.. Do you need me. Loss: 3.3414080142974854, Mistakes: 0.1599999964237213, Control Loss: 5.927182674407959, Total Loss: 0.2785436511039734
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This the how to.. Do you need me., New Loss: 0.2785436511039734
Current length: 19
 simple terms for. IYou need help count.. This the how to.. Do you need me.
Current Loss: 0.2785436511039734 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  25.753464221954346
Intersection set size: 4
Candidate tokens:  I  Leting
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  Here I  Let leting
Time taken to get recomputed solution logits:  26.319191932678223
>Prompt Choice:  simple terms for. IYou need help count.. This the how to.. Do you need me. Loss: 3.317969560623169, Mistakes: 0.1599999964237213, Control Loss: 5.462319374084473, Total Loss: 0.2692463994026184
Time taken to get recomputed solution logits:  23.340174436569214
>Prompt Choice:  simple terms for. IYou need help count..ing the how to.. Do you need me. Loss: 5.35078239440918, Mistakes: 0.19999998807907104, Control Loss: 5.219913005828857, Total Loss: 0.30439823865890503
Time taken to get recomputed solution logits:  24.378374814987183
>Prompt Choice:  simple terms for. IYou need help count.. Here the how to.. Do you need me. Loss: 3.4382832050323486, Mistakes: 0.1599999964237213, Control Loss: 5.616549968719482, Total Loss: 0.27233099937438965
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This the how to.. Do you need me., New Loss: 0.2692463994026184
Current length: 19
 simple terms for. IYou need help count.. This the how to.. Do you need me.
Current Loss: 0.2692463994026184 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  25.84176993370056
Intersection set size: 3
Candidate tokens:  is time means
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  are time is sounds means
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:  time is sounds means
>>>> Topk increased to 11 <<<<
Intersection set size: 7
Candidate tokens: . are time  is sounds means
Time taken to get recomputed solution logits:  24.44996404647827
>Prompt Choice:  simple terms for. IYou need help count.. This is how to.. Do you need me. Loss: 4.292969703674316, Mistakes: 0.19999998807907104, Control Loss: 5.287147045135498, Total Loss: 0.30574291944503784
Time taken to get recomputed solution logits:  24.425054788589478
>Prompt Choice:  simple terms for. IYou need help count.. This are how to.. Do you need me. Loss: 4.257813453674316, Mistakes: 0.19999998807907104, Control Loss: 5.557608604431152, Total Loss: 0.3111521601676941
Time taken to get recomputed solution logits:  24.189308404922485
>Prompt Choice:  simple terms for. IYou need help count.. This  how to.. Do you need me. Loss: 5.681251049041748, Mistakes: 0.23999999463558197, Control Loss: 6.079522609710693, Total Loss: 0.3615904450416565
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to.. Do you need me., New Loss: 0.30574291944503784
Current length: 19
 simple terms for. IYou need help count.. This is how to.. Do you need me.
Current Loss: 0.30574291944503784 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  23.975721836090088
Intersection set size: 4
Candidate tokens:  like how easy a
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  like not easy what how a for
Time taken to get recomputed solution logits:  24.241684198379517
>Prompt Choice:  simple terms for. IYou need help count.. This is what to.. Do you need me. Loss: 6.250002384185791, Mistakes: 0.23999999463558197, Control Loss: 4.976285457611084, Total Loss: 0.3395256996154785
Time taken to get recomputed solution logits:  23.673260927200317
>Prompt Choice:  simple terms for. IYou need help count.. This is a to.. Do you need me. Loss: 7.150783538818359, Mistakes: 0.2800000011920929, Control Loss: 4.776054859161377, Total Loss: 0.37552109360694885
Time taken to get recomputed solution logits:  24.483203887939453
>Prompt Choice:  simple terms for. IYou need help count.. This is how to.. Do you need me. Loss: 4.292969703674316, Mistakes: 0.19999998807907104, Control Loss: 4.814443111419678, Total Loss: 0.2962888479232788
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to.. Do you need me., New Loss: 0.2962888479232788
Current length: 19
 simple terms for. IYou need help count.. This is how to.. Do you need me.
Current Loss: 0.2962888479232788 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  24.00467610359192
Intersection set size: 5
Candidate tokens:  to many we you it
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to many I we you it
Time taken to get recomputed solution logits:  23.642483711242676
>Prompt Choice:  simple terms for. IYou need help count.. This is how we.. Do you need me. Loss: 4.271095275878906, Mistakes: 0.19999998807907104, Control Loss: 4.957617282867432, Total Loss: 0.29915231466293335normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  24.58305835723877
>Prompt Choice:  simple terms for. IYou need help count.. This is how to.. Do you need me. Loss: 4.292969703674316, Mistakes: 0.19999998807907104, Control Loss: 4.814443111419678, Total Loss: 0.2962888479232788
Time taken to get recomputed solution logits:  24.21914553642273
>Prompt Choice:  simple terms for. IYou need help count.. This is how I.. Do you need me. Loss: 6.655470848083496, Mistakes: 0.2800000011920929, Control Loss: 4.842042446136475, Total Loss: 0.37684082984924316
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to.. Do you need me., New Loss: 0.2962888479232788
Current length: 19
 simple terms for. IYou need help count.. This is how to.. Do you need me.
Current Loss: 0.2962888479232788 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  24.009526252746582
Intersection set size: 2
Candidate tokens:  count do
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  Count count help do
>>>> Topk increased to 9 <<<<
Intersection set size: 9
Candidate tokens: . Count use solve help do addcount count
Time taken to get recomputed solution logits:  23.653728246688843
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do you need me. Loss: 2.4343762397766113, Mistakes: 0.11999999731779099, Control Loss: 4.782558441162109, Total Loss: 0.21565115451812744
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to. Do you need me., New Loss: 0.21565115451812744
Current length: 19
 simple terms for. IYou need help count.. This is how to. Do you need me.
Current Loss: 0.21565115451812744 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  23.008078575134277
Intersection set size: 5
Candidate tokens:  Count One count count
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  Count One You count count
Time taken to get recomputed solution logits:  24.389336585998535
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. You you need me. Loss: 6.290626049041748, Mistakes: 0.23999999463558197, Control Loss: 5.293863773345947, Total Loss: 0.3458772599697113
Time taken to get recomputed solution logits:  23.444673538208008
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do you need me. Loss: 2.4343762397766113, Mistakes: 0.11999999731779099, Control Loss: 4.7230119705200195, Total Loss: 0.21446022391319275
Time taken to get recomputed solution logits:  24.55385398864746
>Prompt Choice:  simple terms for. IYou need help count.. This is how to.  you need me. Loss: 7.6242194175720215, Mistakes: 0.2800000011920929, Control Loss: 5.798656463623047, Total Loss: 0.3959731459617615
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to. Do you need me., New Loss: 0.21446022391319275
Current length: 19
 simple terms for. IYou need help count.. This is how to. Do you need me.
Current Loss: 0.21446022391319275 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  22.982465744018555
Intersection set size: 2
Candidate tokens:  it you
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens: . It count you it the
Time taken to get recomputed solution logits:  24.252686977386475
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do the need me. Loss: 6.2375006675720215, Mistakes: 0.23999999463558197, Control Loss: 5.23592472076416, Total Loss: 0.34471848607063293
Time taken to get recomputed solution logits:  24.10574746131897
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. need me. Loss: 5.422658443450928, Mistakes: 0.19999998807907104, Control Loss: 5.289111614227295, Total Loss: 0.3057822287082672
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to. Do. need me., New Loss: 0.3057822287082672
Current length: 19
 simple terms for. IYou need help count.. This is how to. Do. need me.
Current Loss: 0.3057822287082672 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  23.623085737228394
Intersection set size: 5
Candidate tokens:   Count it It You
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  Count It You it it
Time taken to get recomputed solution logits:  24.312033891677856
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You me. Loss: 4.845314979553223, Mistakes: 0.19999998807907104, Control Loss: 5.517777442932129, Total Loss: 0.310355544090271
Time taken to get recomputed solution logits:  24.782426595687866
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do.  me. Loss: 4.867973804473877, Mistakes: 0.19999998807907104, Control Loss: 6.164368629455566, Total Loss: 0.32328736782073975
Time taken to get recomputed solution logits:  23.732890844345093
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. Count me. Loss: 6.293752193450928, Mistakes: 0.23999999463558197, Control Loss: 5.447873592376709, Total Loss: 0.34895747900009155
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to. Do. You me., New Loss: 0.310355544090271
Current length: 19
 simple terms for. IYou need help count.. This is how to. Do. You me.
Current Loss: 0.310355544090271 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  23.725015878677368
Intersection set size: 4
Candidate tokens: . have count can
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens: . Count need have count can
Time taken to get recomputed solution logits:  24.31328558921814
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You need. Loss: 6.275002956390381, Mistakes: 0.23999999463558197, Control Loss: 5.215600490570068, Total Loss: 0.34431201219558716
Time taken to get recomputed solution logits:  24.192095518112183
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You have. Loss: 6.278127193450928, Mistakes: 0.23999999463558197, Control Loss: 5.186675548553467, Total Loss: 0.3437334895133972
Time taken to get recomputed solution logits:  24.18350601196289
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You count. Loss: 7.648439884185791, Mistakes: 0.2800000011920929, Control Loss: 5.161614894866943, Total Loss: 0.3832322955131531
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to. Do. You have., New Loss: 0.3437334895133972
Current length: 19
 simple terms for. IYou need help count.. This is how to. Do. You have.
Current Loss: 0.3437334895133972 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Time taken to update solutions:  23.620923280715942
Intersection set size: 4
Candidate tokens: . one  a
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens: . to one  a
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens: . to one  a
>>>> Topk increased to 11 <<<<
Intersection set size: 7
Candidate tokens:  this. to one  a the
Time taken to get recomputed solution logits:  24.272159814834595
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You have  Loss: 4.893753528594971, Mistakes: 0.19999998807907104, Control Loss: 4.840346813201904, Total Loss: 0.2968069314956665normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  24.171751976013184
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You have one Loss: 7.389079570770264, Mistakes: 0.2800000011920929, Control Loss: 4.842002868652344, Total Loss: 0.3768400549888611
Time taken to get recomputed solution logits:  24.049636840820312
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You have a Loss: 4.899226188659668, Mistakes: 0.19999998807907104, Control Loss: 4.840628147125244, Total Loss: 0.2968125343322754
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to. Do. You have _, New Loss: 0.2968069314956665
Current length: 19
 simple terms for. IYou need help count.. This is how to. Do. You have _
Current Loss: 0.2968069314956665 Best Loss: 0.1291167140007019 Best Control:  counting to solve. You need oneto count. You find out how much each of your individual objects cost.
Loss plateaued for 50 steps. Moving to next group optimization.
Time taken to update solutions:  44.493090867996216
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  counting the a your
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:  counting the a your
>>>> Topk increased to 11 <<<<
Intersection set size: 5
Candidate tokens:  this your complete a the
>>>> Topk increased to 13 <<<<
Intersection set size: 5
Candidate tokens:  this counting the a your
>>>> Topk increased to 15 <<<<
Intersection set size: 9
Candidate tokens:  this math the complete simple addition a your an
Time taken to get recomputed solution logits:  22.610745191574097
>Prompt Choice:  complete terms for. IYou need help count.. This is how to. Do. You have _ Loss: 14.803187370300293, Mistakes: 0.47999998927116394, Control Loss: 5.439667224884033, Total Loss: 0.5887933373451233
Time taken to get recomputed solution logits:  23.034780502319336
>Prompt Choice:  this terms for. IYou need help count.. This is how to. Do. You have _ Loss: 7.24141788482666, Mistakes: 0.23999999463558197, Control Loss: 5.785740375518799, Total Loss: 0.3557147979736328
Time taken to get recomputed solution logits:  22.955979347229004
>Prompt Choice:  simple terms for. IYou need help count.. This is how to. Do. You have _ Loss: 2.98913836479187, Mistakes: 0.1304347813129425, Control Loss: 4.98035192489624, Total Loss: 0.23004181683063507
No improvement in the current position. Moving to the next position.
New Control:  simple terms for. IYou need help count.. This is how to. Do. You have _, New Loss: 0.23004181683063507
Current length: 19
 simple terms for. IYou need help count.. This is how to. Do. You have _
Current Loss: 0.23004181683063507 Best Loss: 0.23004181683063507 Best Control:  simple terms for. IYou need help count.. This is how to. Do. You have _
Step:  0 Candidates:  [(0.23004181683063507, ' simple terms for. IYou need help count.. This is how to. Do. You have _')]
Time taken to update solutions:  44.97055792808533
Intersection set size: 3
Candidate tokens:  math words language
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  math words terms language
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  math counting words language terms
>>>> Topk increased to 11 <<<<
Intersection set size: 8
Candidate tokens:  arithmetic math counting words language terms addition maths
Time taken to get recomputed solution logits:  23.34711980819702
>Prompt Choice:  simple counting for. IYou need help count.. This is how to. Do. You have _ Loss: 7.133018970489502, Mistakes: 0.29629629850387573, Control Loss: 5.632168769836426, Total Loss: 0.4089396595954895
Time taken to get recomputed solution logits:  22.87178659439087
>Prompt Choice:  simple maths for. IYou need help count.. This is how to. Do. You have _ Loss: 1.7488089799880981, Mistakes: 0.07692307978868484, Control Loss: 5.682889461517334, Total Loss: 0.19058087468147278
Time taken to get recomputed solution logits:  20.79110598564148
>Prompt Choice:  simple math for. IYou need help count.. This is how to. Do. You have _ Loss: 2.027700662612915, Mistakes: 0.09090909361839294, Control Loss: 5.634306907653809, Total Loss: 0.20359522104263306
No improvement in the current position. Moving to the next position.
New Control:  simple maths for. IYou need help count.. This is how to. Do. You have _, New Loss: 0.19058087468147278
Current length: 19
 simple maths for. IYou need help count.. This is how to. Do. You have _
Current Loss: 0.19058087468147278 Best Loss: 0.19058087468147278 Best Control:  simple maths for. IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  45.648109436035156
Intersection set size: 5
Candidate tokens:  to and., 
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to. and,  for
Time taken to get recomputed solution logits:  23.978406190872192
>Prompt Choice:  simple maths and. IYou need help count.. This is how to. Do. You have _ Loss: 4.171551704406738, Mistakes: 0.1666666716337204, Control Loss: 5.40585470199585, Total Loss: 0.27478376030921936
Time taken to get recomputed solution logits:  23.167453050613403
>Prompt Choice:  simple maths for. IYou need help count.. This is how to. Do. You have _ Loss: 2.740635871887207, Mistakes: 0.11999999731779099, Control Loss: 5.738442897796631, Total Loss: 0.2347688525915146
Time taken to get recomputed solution logits:  23.43912649154663
>Prompt Choice:  simple maths . IYou need help count.. This is how to. Do. You have _ Loss: 1.8831380605697632, Mistakes: 0.0833333358168602, Control Loss: 6.311738014221191, Total Loss: 0.2095680832862854
No improvement in the current position. Moving to the next position.
New Control:  simple maths . IYou need help count.. This is how to. Do. You have _, New Loss: 0.2095680832862854
Current length: 18
 simple maths . IYou need help count.. This is how to. Do. You have _
Current Loss: 0.2095680832862854 Best Loss: 0.19058087468147278 Best Control:  simple maths for. IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  44.94928741455078
Intersection set size: 3
Candidate tokens:   If You
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  If We You Add  I
Time taken to get recomputed solution logits:  23.155332565307617
>Prompt Choice:  simple maths . WeYou need help count.. This is how to. Do. You have _ Loss: 2.657815456390381, Mistakes: 0.11999999731779099, Control Loss: 5.934261322021484, Total Loss: 0.2386852204799652
Time taken to get recomputed solution logits:  21.790228128433228
>Prompt Choice:  simple maths . IYou need help count.. This is how to. Do. You have _ Loss: 1.0927734375, Mistakes: 0.05000000074505806, Control Loss: 6.017756462097168, Total Loss: 0.17035512626171112
Time taken to get recomputed solution logits:  21.03523564338684
>Prompt Choice:  simple maths . YouYou need help count.. This is how to. Do. You have _ Loss: 1.6918991804122925, Mistakes: 0.0833333358168602, Control Loss: 6.0284647941589355, Total Loss: 0.20390263199806213
No improvement in the current position. Moving to the next position.
New Control:  simple maths . IYou need help count.. This is how to. Do. You have _, New Loss: 0.17035512626171112
Current length: 18
 simple maths . IYou need help count.. This is how to. Do. You have _
Current Loss: 0.17035512626171112 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  45.004310131073
Intersection set size: 2
Candidate tokens:  can have
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:  have am can
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  see need know have am can
Time taken to get recomputed solution logits:  29.974496603012085
>Prompt Choice:  simple maths . IYou need help count.. This is how to. Do. You have _ Loss: 4.74749231338501, Mistakes: 0.1785714328289032, Control Loss: 6.057616233825684, Total Loss: 0.299723744392395normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to get recomputed solution logits:  24.571603298187256
>Prompt Choice:  simple maths . I see need help count.. This is how to. Do. You have _ Loss: 3.9265644550323486, Mistakes: 0.1599999964237213, Control Loss: 6.4193196296691895, Total Loss: 0.28838640451431274
Time taken to get recomputed solution logits:  23.159706830978394
>Prompt Choice:  simple maths . I know need help count.. This is how to. Do. You have _ Loss: 4.28955078125, Mistakes: 0.1666666716337204, Control Loss: 6.338754177093506, Total Loss: 0.2934417724609375
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see need help count.. This is how to. Do. You have _, New Loss: 0.28838640451431274
Current length: 18
 simple maths . I see need help count.. This is how to. Do. You have _
Current Loss: 0.28838640451431274 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  47.37436628341675
Intersection set size: 3
Candidate tokens:   that you
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:   that you a
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:   that you a the
>>>> Topk increased to 11 <<<<
Intersection set size: 6
Candidate tokens:  that  there you a the
Time taken to get recomputed solution logits:  22.94793677330017
>Prompt Choice:  simple maths . I see a help count.. This is how to. Do. You have _ Loss: 10.767748832702637, Mistakes: 0.38461539149284363, Control Loss: 6.258543014526367, Total Loss: 0.5097862482070923
Time taken to get recomputed solution logits:  19.806718349456787
>Prompt Choice:  simple maths . I see that help count.. This is how to. Do. You have _ Loss: 4.10736083984375, Mistakes: 0.14814814925193787, Control Loss: 6.299934387207031, Total Loss: 0.2741468548774719
Time taken to get recomputed solution logits:  22.4538791179657
>Prompt Choice:  simple maths . I see  help count.. This is how to. Do. You have _ Loss: 7.7617316246032715, Mistakes: 0.30000001192092896, Control Loss: 6.747178077697754, Total Loss: 0.4349435567855835
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that help count.. This is how to. Do. You have _, New Loss: 0.2741468548774719
Current length: 18
 simple maths . I see that help count.. This is how to. Do. You have _
Current Loss: 0.2741468548774719 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  44.31690859794617
Intersection set size: 4
Candidate tokens:  there you the I
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  I there  you the
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  I there  you it is the
Time taken to get recomputed solution logits:  18.728136777877808
>Prompt Choice:  simple maths . I see that is count.. This is how to. Do. You have _ Loss: 6.2965087890625, Mistakes: 0.190476194024086, Control Loss: 5.882760524749756, Total Loss: 0.3081313967704773
Time taken to get recomputed solution logits:  25.578901290893555
>Prompt Choice:  simple maths . I see that there count.. This is how to. Do. You have _ Loss: 6.289770603179932, Mistakes: 0.2142857313156128, Control Loss: 6.147317409515381, Total Loss: 0.3372320830821991
Time taken to get recomputed solution logits:  22.100529670715332
>Prompt Choice:  simple maths . I see that  count.. This is how to. Do. You have _ Loss: 7.339996814727783, Mistakes: 0.26923078298568726, Control Loss: 6.331393241882324, Total Loss: 0.39585864543914795
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is count.. This is how to. Do. You have _, New Loss: 0.3081313967704773
Current length: 18
 simple maths . I see that is count.. This is how to. Do. You have _
Current Loss: 0.3081313967704773 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  44.582364320755005
Intersection set size: 2
Candidate tokens:   a
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:   more simple a easy
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  easy not  more a an
Time taken to get recomputed solution logits:  21.69297432899475
>Prompt Choice:  simple maths . I see that is easy.. This is how to. Do. You have _ Loss: 13.742897987365723, Mistakes: 0.4545454680919647, Control Loss: 5.57003927230835, Total Loss: 0.5659462213516235
Time taken to get recomputed solution logits:  23.45658779144287
>Prompt Choice:  simple maths . I see that is more.. This is how to. Do. You have _ Loss: 12.51720142364502, Mistakes: 0.3999999761581421, Control Loss: 5.805113315582275, Total Loss: 0.5161022543907166
Time taken to get recomputed solution logits:  29.32161593437195
>Prompt Choice:  simple maths . I see that is .. This is how to. Do. You have _ Loss: 14.455132484436035, Mistakes: 0.4848484992980957, Control Loss: 6.010135650634766, Total Loss: 0.6050512194633484
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more.. This is how to. Do. You have _, New Loss: 0.5161022543907166
Current length: 18
 simple maths . I see that is more.. This is how to. Do. You have _
Current Loss: 0.5161022543907166 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  43.91575288772583
Intersection set size: 3
Candidate tokens:  that then than
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  that complex complicated then than
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  that difficult complex complicated simple then than
Time taken to get recomputed solution logits:  21.5159273147583
>Prompt Choice:  simple maths . I see that is more complicated This is how to. Do. You have _ Loss: 13.85742473602295, Mistakes: 0.5, Control Loss: 5.932565689086914, Total Loss: 0.6186513304710388
Time taken to get recomputed solution logits:  30.066133737564087
>Prompt Choice:  simple maths . I see that is more difficult This is how to. Do. You have _ Loss: 14.203933715820312, Mistakes: 0.4482758641242981, Control Loss: 5.893726825714111, Total Loss: 0.566150426864624
Time taken to get recomputed solution logits:  25.4069344997406
>Prompt Choice:  simple maths . I see that is more that This is how to. Do. You have _ Loss: 11.55778694152832, Mistakes: 0.37931033968925476, Control Loss: 6.017606258392334, Total Loss: 0.49966245889663696
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that This is how to. Do. You have _, New Loss: 0.49966245889663696
Current length: 18
 simple maths . I see that is more that This is how to. Do. You have _
Current Loss: 0.49966245889663696 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  41.012141704559326
Intersection set size: 3
Candidate tokens:   just one
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:   just one
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:   just enough one
>>>> Topk increased to 11 <<<<
Intersection set size: 7
Candidate tokens:  two just enough one  a the
Time taken to get recomputed solution logits:  17.119093894958496
>Prompt Choice:  simple maths . I see that is more that just is how to. Do. You have _ Loss: 10.341805458068848, Mistakes: 0.3333333432674408, Control Loss: 6.188249111175537, Total Loss: 0.4570983052253723
Time taken to get recomputed solution logits:  20.400330543518066
>Prompt Choice:  simple maths . I see that is more that two is how to. Do. You have _ Loss: 10.332906723022461, Mistakes: 0.3913043439388275, Control Loss: 6.044355392456055, Total Loss: 0.5121914744377136
Time taken to get recomputed solution logits:  21.63858199119568
>Prompt Choice:  simple maths . I see that is more that a is how to. Do. You have _ Loss: 8.153031349182129, Mistakes: 0.3333333432674408, Control Loss: 6.122425556182861, Total Loss: 0.45578184723854065normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a is how to. Do. You have _, New Loss: 0.45578184723854065
Current length: 18
 simple maths . I see that is more that a is how to. Do. You have _
Current Loss: 0.45578184723854065 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  40.89347195625305
Intersection set size: 2
Candidate tokens:  simple dozen
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  simple couple few single
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  dozen single  simple few
>>>> Topk increased to 11 <<<<
Intersection set size: 5
Candidate tokens:  dozen single simple few handful
>>>> Topk increased to 13 <<<<
Intersection set size: 8
Candidate tokens:  dozen single  simple handful couple few lot
Time taken to get recomputed solution logits:  22.32583475112915
>Prompt Choice:  simple maths . I see that is more that a couple how to. Do. You have _ Loss: 8.877928733825684, Mistakes: 0.35999998450279236, Control Loss: 5.885833740234375, Total Loss: 0.4777166545391083
Time taken to get recomputed solution logits:  20.002846717834473
>Prompt Choice:  simple maths . I see that is more that a single how to. Do. You have _ Loss: 7.834702491760254, Mistakes: 0.29629629850387573, Control Loss: 5.794508457183838, Total Loss: 0.41218647360801697
Time taken to get recomputed solution logits:  18.715177059173584
>Prompt Choice:  simple maths . I see that is more that a simple how to. Do. You have _ Loss: 11.86719036102295, Mistakes: 0.4000000059604645, Control Loss: 5.886464595794678, Total Loss: 0.5177292823791504
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single how to. Do. You have _, New Loss: 0.41218647360801697
Current length: 18
 simple maths . I see that is more that a single how to. Do. You have _
Current Loss: 0.41218647360801697 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  40.675087213516235
Intersection set size: 1
Candidate tokens:  answer
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:  digit answer number
>>>> Topk increased to 9 <<<<
Intersection set size: 3
Candidate tokens:  answer number digit
>>>> Topk increased to 11 <<<<
Intersection set size: 6
Candidate tokens: . digit one item answer number
Time taken to get recomputed solution logits:  25.615546703338623
>Prompt Choice:  simple maths . I see that is more that a single how to. Do. You have _ Loss: 12.191750526428223, Mistakes: 0.4516128897666931, Control Loss: 5.390830993652344, Total Loss: 0.5594295263290405
Time taken to get recomputed solution logits:  21.045865058898926
>Prompt Choice:  simple maths . I see that is more that a single one to. Do. You have _ Loss: 9.388025283813477, Mistakes: 0.37037038803100586, Control Loss: 5.836327075958252, Total Loss: 0.4870969355106354
Time taken to get recomputed solution logits:  23.1462504863739
>Prompt Choice:  simple maths . I see that is more that a single. to. Do. You have _ Loss: 10.601179122924805, Mistakes: 0.37931033968925476, Control Loss: 5.779778957366943, Total Loss: 0.49490591883659363
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. to. Do. You have _, New Loss: 0.49490591883659363
Current length: 18
 simple maths . I see that is more that a single. to. Do. You have _
Current Loss: 0.49490591883659363 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  37.60429048538208
Intersection set size: 5
Candidate tokens:  So It I  That
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  So It I  More That
Time taken to get recomputed solution logits:  16.154176235198975
>Prompt Choice:  simple maths . I see that is more that a single. . Do. You have _ Loss: 10.265639305114746, Mistakes: 0.4000000059604645, Control Loss: 6.099571704864502, Total Loss: 0.5219914317131042
Time taken to get recomputed solution logits:  19.986655235290527
>Prompt Choice:  simple maths . I see that is more that a single. I. Do. You have _ Loss: 8.929850578308105, Mistakes: 0.2916666865348816, Control Loss: 5.520657062530518, Total Loss: 0.40207982063293457
Time taken to get recomputed solution logits:  15.855738162994385
>Prompt Choice:  simple maths . I see that is more that a single. More. Do. You have _ Loss: 10.596441268920898, Mistakes: 0.3636363744735718, Control Loss: 5.759357452392578, Total Loss: 0.4788235127925873
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I. Do. You have _, New Loss: 0.40207982063293457
Current length: 18
 simple maths . I see that is more that a single. I. Do. You have _
Current Loss: 0.40207982063293457 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  39.712244272232056
Intersection set size: 4
Candidate tokens:  see have know can
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  see know also have am can
Time taken to get recomputed solution logits:  23.514976501464844
>Prompt Choice:  simple maths . I see that is more that a single. I have Do. You have _ Loss: 7.604579448699951, Mistakes: 0.3499999940395355, Control Loss: 5.534512042999268, Total Loss: 0.4606902301311493
Time taken to get recomputed solution logits:  21.1608943939209
>Prompt Choice:  simple maths . I see that is more that a single. I can Do. You have _ Loss: 12.413484573364258, Mistakes: 0.40740740299224854, Control Loss: 5.6504669189453125, Total Loss: 0.5204167366027832
Time taken to get recomputed solution logits:  22.130522966384888
>Prompt Choice:  simple maths . I see that is more that a single. I am Do. You have _ Loss: 10.17906665802002, Mistakes: 0.35999998450279236, Control Loss: 5.794103622436523, Total Loss: 0.47588205337524414
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have Do. You have _, New Loss: 0.4606902301311493
Current length: 18
 simple maths . I see that is more that a single. I have Do. You have _
Current Loss: 0.4606902301311493 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  43.64101266860962
Intersection set size: 3
Candidate tokens:   more a
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens:   more a
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  many multiple  more at a
Time taken to get recomputed solution logits:  18.616751670837402
>Prompt Choice:  simple maths . I see that is more that a single. I have at. You have _ Loss: 11.450035095214844, Mistakes: 0.4444444477558136, Control Loss: 5.528393268585205, Total Loss: 0.5550122857093811
Time taken to get recomputed solution logits:  17.859091758728027
>Prompt Choice:  simple maths . I see that is more that a single. I have multiple. You have _ Loss: 13.055334091186523, Mistakes: 0.3999999761581421, Control Loss: 5.392236709594727, Total Loss: 0.5078446865081787
Time taken to get recomputed solution logits:  22.710850954055786
>Prompt Choice:  simple maths . I see that is more that a single. I have more. You have _ Loss: 6.186403274536133, Mistakes: 0.29411765933036804, Control Loss: 5.522759914398193, Total Loss: 0.40457284450531006
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more. You have _, New Loss: 0.40457284450531006
Current length: 18
 simple maths . I see that is more that a single. I have more. You have _
Current Loss: 0.40457284450531006 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Time taken to update solutions:  42.8434693813324
Intersection set size: 3
Candidate tokens:  that then than
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens: . that then than
>>>> Topk increased to 9 <<<<
Intersection set size: 8
Candidate tokens: . that th  then tha than the
Time taken to get recomputed solution logits:  20.882728099822998
>Prompt Choice:  simple maths . I see that is more that a single. I have more than You have _ Loss: 7.851783275604248, Mistakes: 0.3461538553237915, Control Loss: 5.218871116638184, Total Loss: 0.4505312740802765
Time taken to get recomputed solution logits:  13.552657842636108
>Prompt Choice:  simple maths . I see that is more that a single. I have more then You have _ Loss: 2.667818307876587, Mistakes: 0.11764705926179886, Control Loss: 5.303063869476318, Total Loss: 0.22370833158493042
Time taken to get recomputed solution logits:  21.667139053344727
>Prompt Choice:  simple maths . I see that is more that a single. I have more that You have _ Loss: 6.29373025894165, Mistakes: 0.25925925374031067, Control Loss: 5.273669242858887, Total Loss: 0.36473262310028076
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then You have _, New Loss: 0.22370833158493042
Current length: 18
 simple maths . I see that is more that a single. I have more then You have _
Current Loss: 0.22370833158493042 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Step:  15 Candidates:  [(0.17035512626171112, ' simple maths . IYou need help count.. This is how to. Do. You have _'), (0.19058087468147278, ' simple maths for. IYou need help count.. This is how to. Do. You have _'), (0.2095680832862854, ' simple maths . IYou need help count.. This is how to. Do. You have _'), (0.22370833158493042, ' simple maths . I see that is more that a single. I have more then You have _'), (0.23004181683063507, ' simple terms for. IYou need help count.. This is how to. Do. You have _'), (0.2741468548774719, ' simple maths . I see that help count.. This is how to. Do. You have _'), (0.28838640451431274, ' simple maths . I see need help count.. This is how to. Do. You have _'), (0.3081313967704773, ' simple maths . I see that is count.. This is how to. Do. You have _'), (0.40207982063293457, ' simple maths . I see that is more that a single. I. Do. You have _'), (0.40457284450531006, ' simple maths . I see that is more that a single. I have more. You have _')]
Time taken to update solutions:  41.97440266609192
Intersection set size: 4
Candidate tokens:   two a one
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  two just zero ten one  a
Time taken to get recomputed solution logits:  22.1815927028656
>Prompt Choice:  simple maths . I see that is more that a single. I have more then You have _ Loss: 5.92540979385376, Mistakes: 0.23999999463558197, Control Loss: 5.147449493408203, Total Loss: 0.3429489731788635
Time taken to get recomputed solution logits:  22.366585731506348
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten have _ Loss: 3.8280560970306396, Mistakes: 0.18518519401550293, Control Loss: 5.5940632820129395, Total Loss: 0.29706645011901855
Time taken to get recomputed solution logits:  24.463395595550537
>Prompt Choice:  simple maths . I see that is more that a single. I have more then a have _ Loss: 11.343217849731445, Mistakes: 0.40909093618392944, Control Loss: 5.672546863555908, Total Loss: 0.522541880607605
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten have _, New Loss: 0.29706645011901855
Current length: 18
 simple maths . I see that is more that a single. I have more then ten have _
Current Loss: 0.29706645011901855 Best Loss: 0.17035512626171112 Best Control:  simple maths . IYou need help count.. This is how to. Do. You have _
Time taken to update solutions:  43.26742196083069
Intersection set size: 3
Candidate tokens: ., but
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  ., but
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens: . and, but so 
Time taken to get recomputed solution logits:  27.40639090538025
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten have _ Loss: 4.497074127197266, Mistakes: 0.1785714328289032, Control Loss: 5.111614227294922, Total Loss: 0.28080371022224426
Time taken to get recomputed solution logits:  22.33490800857544
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten and _ Loss: 6.2578125, Mistakes: 0.23999999463558197, Control Loss: 5.169412136077881, Total Loss: 0.34338822960853577
Time taken to get recomputed solution logits:  19.104928731918335
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten  _ Loss: 1.137581467628479, Mistakes: 0.04545454680919647, Control Loss: 5.55125093460083, Total Loss: 0.15647956728935242
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten  _, New Loss: 0.15647956728935242
Current length: 18
 simple maths . I see that is more that a single. I have more then ten  _
Current Loss: 0.15647956728935242 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  39.428815841674805
Intersection set size: 2
Candidate tokens: .but
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens: .becausebutand
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens: .,becauseIbutand
Time taken to get recomputed solution logits:  28.343202590942383
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because Loss: 7.8711113929748535, Mistakes: 0.27586206793785095, Control Loss: 4.766835689544678, Total Loss: 0.37119877338409424
Time taken to get recomputed solution logits:  20.547319412231445
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁_ Loss: 5.89111328125, Mistakes: 0.25, Control Loss: 4.806240081787109, Total Loss: 0.3461247980594635
Time taken to get recomputed solution logits:  22.126375436782837
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁, Loss: 7.0166120529174805, Mistakes: 0.2916666865348816, Control Loss: 4.726678848266602, Total Loss: 0.3862002491950989
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁__, New Loss: 0.3461247980594635
Current length: 18
 simple maths . I see that is more that a single. I have more then ten▁▁__
Current Loss: 0.3461247980594635 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  39.97829532623291
Intersection set size: 3
Candidate tokens: .becausebut
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens: .Ibut
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens: .,becauseIbutand
Time taken to get recomputed solution logits:  24.159196615219116
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because Loss: 3.3744192123413086, Mistakes: 0.1538461595773697, Control Loss: 4.8809709548950195, Total Loss: 0.2514655590057373
Time taken to get recomputed solution logits:  20.492783546447754
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁__ Loss: 6.174880027770996, Mistakes: 0.23076924681663513, Control Loss: 4.8384175300598145, Total Loss: 0.3275375962257385
Time taken to get recomputed solution logits:  22.494521617889404
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁and Loss: 5.219034194946289, Mistakes: 0.1785714328289032, Control Loss: 4.865672588348389, Total Loss: 0.27588486671447754normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁because_, New Loss: 0.2514655590057373
Current length: 19
 simple maths . I see that is more that a single. I have more then ten▁▁because_
Current Loss: 0.2514655590057373 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  46.05142903327942
Intersection set size: 3
Candidate tokens:  there  I
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  of I there  it the
Time taken to get recomputed solution logits:  17.101571798324585
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because_ Loss: 7.201094150543213, Mistakes: 0.21739131212234497, Control Loss: 4.81419563293457, Total Loss: 0.3136752247810364
Time taken to get recomputed solution logits:  20.51564884185791
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there Loss: 2.9066052436828613, Mistakes: 0.09090909361839294, Control Loss: 4.87044095993042, Total Loss: 0.1883179098367691
Time taken to get recomputed solution logits:  22.725382566452026
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because it Loss: 4.375782489776611, Mistakes: 0.19999998807907104, Control Loss: 4.815946102142334, Total Loss: 0.296318918466568
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁because there_, New Loss: 0.1883179098367691
Current length: 20
 simple maths . I see that is more that a single. I have more then ten▁▁because there_
Current Loss: 0.1883179098367691 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  44.75798439979553
Intersection set size: 5
Candidate tokens:   isn more are is
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:   isn more are is
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  are  isn more is
>>>> Topk increased to 11 <<<<
Intersection set size: 8
Candidate tokens: . are isn  more were is a
Time taken to get recomputed solution logits:  22.471871376037598
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there were Loss: 4.707880973815918, Mistakes: 0.17391304671764374, Control Loss: 4.851423740386963, Total Loss: 0.27094152569770813
Time taken to get recomputed solution logits:  19.573588609695435
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more Loss: 3.842397928237915, Mistakes: 0.11538462340831757, Control Loss: 4.8706464767456055, Total Loss: 0.21279755234718323
Time taken to get recomputed solution logits:  22.43217921257019
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there a Loss: 4.193004608154297, Mistakes: 0.1818181872367859, Control Loss: 4.819147109985352, Total Loss: 0.2782011330127716
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁because there more_, New Loss: 0.21279755234718323
Current length: 21
 simple maths . I see that is more that a single. I have more then ten▁▁because there more_
Current Loss: 0.21279755234718323 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  43.48062348365784
Intersection set size: 3
Candidate tokens:  that then than
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  that items then than the
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens:  that  then than the
>>>> Topk increased to 11 <<<<
Intersection set size: 6
Candidate tokens:  that  then them than the
Time taken to get recomputed solution logits:  20.824042081832886
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more  Loss: 4.199219703674316, Mistakes: 0.190476194024086, Control Loss: 4.890562057495117, Total Loss: 0.2882874310016632
Time taken to get recomputed solution logits:  21.886613368988037
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more them Loss: 7.036514759063721, Mistakes: 0.26923078298568726, Control Loss: 4.858906269073486, Total Loss: 0.36640891432762146
Time taken to get recomputed solution logits:  29.005917072296143
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more then Loss: 6.390087127685547, Mistakes: 0.27586206793785095, Control Loss: 4.880779266357422, Total Loss: 0.37347763776779175
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁because there more _, New Loss: 0.2882874310016632
Current length: 21
 simple maths . I see that is more that a single. I have more then ten▁▁because there more _
Current Loss: 0.2882874310016632 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  44.23983550071716
Intersection set size: 3
Candidate tokens:  that then than
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  that then than the
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens: . that  then than the
Time taken to get recomputed solution logits:  28.946309089660645
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more _ Loss: 6.6762003898620605, Mistakes: 0.25, Control Loss: 4.908539295196533, Total Loss: 0.34817078709602356
Time taken to get recomputed solution logits:  22.378615856170654
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more then Loss: 5.419922828674316, Mistakes: 0.19230769574642181, Control Loss: 4.874249458312988, Total Loss: 0.2897926867008209
Time taken to get recomputed solution logits:  20.905246257781982
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the Loss: 4.049479007720947, Mistakes: 0.1428571492433548, Control Loss: 4.8920464515686035, Total Loss: 0.24069806933403015
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the_, New Loss: 0.24069806933403015
Current length: 22
 simple maths . I see that is more that a single. I have more then ten▁▁because there more the_
Current Loss: 0.24069806933403015 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  42.500327825546265
Intersection set size: 1
Candidate tokens:  
>>>> Topk increased to 7 <<<<
Intersection set size: 2
Candidate tokens:   one
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  two three one  sum number
Time taken to get recomputed solution logits:  23.064071655273438
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the  Loss: 6.900542736053467, Mistakes: 0.26923078298568726, Control Loss: 4.842832088470459, Total Loss: 0.3660874366760254
Time taken to get recomputed solution logits:  24.7241952419281
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the two Loss: 5.835938930511475, Mistakes: 0.20000001788139343, Control Loss: 4.819333076477051, Total Loss: 0.2963866591453552
Time taken to get recomputed solution logits:  22.14391827583313
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the number Loss: 4.151893615722656, Mistakes: 0.1538461595773697, Control Loss: 4.8325514793396, Total Loss: 0.2504971921443939normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the number_, New Loss: 0.2504971921443939
Current length: 23
 simple maths . I see that is more that a single. I have more then ten▁▁because there more the number_
Current Loss: 0.2504971921443939 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  44.56281280517578
Intersection set size: 2
Candidate tokens:  of 
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  of. on 
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens:  of. on  you in
Time taken to get recomputed solution logits:  22.101714372634888
>Prompt Choice:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 3.413093328475952, Mistakes: 0.1666666716337204, Control Loss: 4.764759540557861, Total Loss: 0.2619618773460388
No improvement in the current position. Moving to the next position.
New Control:  simple maths . I see that is more that a single. I have more then ten▁▁because there more the number., New Loss: 0.2619618773460388
Current length: 23
 simple maths . I see that is more that a single. I have more then ten▁▁because there more the number.
!!!!Rejecting new control originally, changed !!!!
Current Loss: 0.2619618773460388 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  44.43366527557373
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  counting the a your
>>>> Topk increased to 9 <<<<
Intersection set size: 4
Candidate tokens:  counting the a your
>>>> Topk increased to 11 <<<<
Intersection set size: 3
Candidate tokens:  the a your
>>>> Topk increased to 13 <<<<
Intersection set size: 6
Candidate tokens:  this counting words the a your
Time taken to get recomputed solution logits:  27.18796992301941
>Prompt Choice:  words maths . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 4.18620491027832, Mistakes: 0.14814814925193787, Control Loss: 5.045930862426758, Total Loss: 0.2490667700767517
Time taken to get recomputed solution logits:  24.451330423355103
>Prompt Choice:  a maths . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 5.543272495269775, Mistakes: 0.25925925374031067, Control Loss: 4.989799499511719, Total Loss: 0.3590552508831024
Time taken to get recomputed solution logits:  28.361496210098267
>Prompt Choice:  counting maths . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 1.3328527212142944, Mistakes: 0.06896551698446274, Control Loss: 4.886471748352051, Total Loss: 0.16669493913650513
No improvement in the current position. Moving to the next position.
New Control:  counting maths . I see that is more that a single. I have more then ten▁▁because there more the number., New Loss: 0.16669493913650513
Current length: 23
 counting maths . I see that is more that a single. I have more then ten▁▁because there more the number.
Current Loss: 0.16669493913650513 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  44.428001165390015
Intersection set size: 2
Candidate tokens:  to.
>>>> Topk increased to 7 <<<<
Intersection set size: 4
Candidate tokens:  to and. words
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  to and. method words principle by
Time taken to get recomputed solution logits:  20.98019528388977
>Prompt Choice:  counting words . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 1.875831127166748, Mistakes: 0.0833333358168602, Control Loss: 5.056906700134277, Total Loss: 0.18447145819664001
Time taken to get recomputed solution logits:  31.565491914749146
>Prompt Choice:  counting and . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 2.5142078399658203, Mistakes: 0.12121212482452393, Control Loss: 5.035988807678223, Total Loss: 0.22193190455436707
Time taken to get recomputed solution logits:  25.366142511367798
>Prompt Choice:  counting to . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 3.8058040142059326, Mistakes: 0.1785714328289032, Control Loss: 4.960255146026611, Total Loss: 0.2777765393257141
No improvement in the current position. Moving to the next position.
New Control:  counting words . I see that is more that a single. I have more then ten▁▁because there more the number., New Loss: 0.18447145819664001
Current length: 23
 counting words . I see that is more that a single. I have more then ten▁▁because there more the number.
Current Loss: 0.18447145819664001 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  37.438395977020264
Intersection set size: 5
Candidate tokens:  to. and like for
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  to like and.  for
Time taken to get recomputed solution logits:  21.040261268615723
>Prompt Choice:  counting words. I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 3.1694235801696777, Mistakes: 0.13636364042758942, Control Loss: 4.724535942077637, Total Loss: 0.2308543622493744
Time taken to get recomputed solution logits:  21.91763949394226
>Prompt Choice:  counting words  I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 5.2327775955200195, Mistakes: 0.21739131212234497, Control Loss: 4.97045373916626, Total Loss: 0.31680038571357727
Time taken to get recomputed solution logits:  19.436504125595093
>Prompt Choice:  counting words . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 3.532536745071411, Mistakes: 0.13636364042758942, Control Loss: 4.5915446281433105, Total Loss: 0.22819453477859497
No improvement in the current position. Moving to the next position.
New Control:  counting words . I see that is more that a single. I have more then ten▁▁because there more the number., New Loss: 0.22819453477859497
Current length: 23
 counting words . I see that is more that a single. I have more then ten▁▁because there more the number.
!!!!Rejecting new control originally, changed !!!!
Current Loss: 0.22819453477859497 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  37.313021183013916
Intersection set size: 4
Candidate tokens:  OneOne one
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  OneOne one I one
Time taken to get recomputed solution logits:  20.87921404838562
>Prompt Choice:  counting words . I see that is more that a single. I have more then ten▁▁because there more the number. Loss: 1.8530759811401367, Mistakes: 0.0833333358168602, Control Loss: 4.6557135581970215, Total Loss: 0.17644760012626648
Time taken to get recomputed solution logits:  23.560229778289795
>Prompt Choice:  counting words . one see that is more that a single. I have more then ten▁▁because there more the number. Loss: 4.913028717041016, Mistakes: 0.2142857313156128, Control Loss: 5.32820987701416, Total Loss: 0.3208499252796173
Time taken to get recomputed solution logits:  20.718668937683105
>Prompt Choice:  counting words . One see that is more that a single. I have more then ten▁▁because there more the number. Loss: 5.884974002838135, Mistakes: 0.19230769574642181, Control Loss: 5.207345962524414, Total Loss: 0.29645460844039917
No improvement in the current position. Moving to the next position.
New Control:  counting words . I see that is more that a single. I have more then ten▁▁because there more the number., New Loss: 0.17644760012626648normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.

Current length: 23
 counting words . I see that is more that a single. I have more then ten▁▁because there more the number.
Current Loss: 0.17644760012626648 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  37.412683725357056
Intersection set size: 3
Candidate tokens:  have am count
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  see  have am count can
Time taken to get recomputed solution logits:  19.938334226608276
>Prompt Choice:  counting words . I can that is more that a single. I have more then ten▁▁because there more the number. Loss: 2.122236967086792, Mistakes: 0.11538462340831757, Control Loss: 4.888247489929199, Total Loss: 0.21314957737922668
Time taken to get recomputed solution logits:  18.614991903305054
>Prompt Choice:  counting words . I am that is more that a single. I have more then ten▁▁because there more the number. Loss: 4.858036994934082, Mistakes: 0.1818181872367859, Control Loss: 4.957126617431641, Total Loss: 0.28096070885658264
Time taken to get recomputed solution logits:  21.129830360412598
>Prompt Choice:  counting words . I have that is more that a single. I have more then ten▁▁because there more the number. Loss: 2.848461151123047, Mistakes: 0.11999999731779099, Control Loss: 4.9824724197387695, Total Loss: 0.21964943408966064
No improvement in the current position. Moving to the next position.
New Control:  counting words . I can that is more that a single. I have more then ten▁▁because there more the number., New Loss: 0.21314957737922668
Current length: 23
 counting words . I can that is more that a single. I have more then ten▁▁because there more the number.
Current Loss: 0.21314957737922668 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Step:  30 Candidates:  [(0.15647956728935242, ' simple maths . I see that is more that a single. I have more then ten  _'), (0.16669493913650513, ' counting maths . I see that is more that a single. I have more then ten▁▁because there more the number.'), (0.17035512626171112, ' simple maths . IYou need help count.. This is how to. Do. You have _'), (0.17644760012626648, ' counting words . I see that is more that a single. I have more then ten▁▁because there more the number.'), (0.18447145819664001, ' counting words . I see that is more that a single. I have more then ten▁▁because there more the number.'), (0.1883179098367691, ' simple maths . I see that is more that a single. I have more then ten▁▁because there_'), (0.19058087468147278, ' simple maths for. IYou need help count.. This is how to. Do. You have _'), (0.2095680832862854, ' simple maths . IYou need help count.. This is how to. Do. You have _'), (0.21279755234718323, ' simple maths . I see that is more that a single. I have more then ten▁▁because there more_'), (0.21314957737922668, ' counting words . I can that is more that a single. I have more then ten▁▁because there more the number.')]
Time taken to update solutions:  37.001649141311646
Intersection set size: 5
Candidate tokens:  use see help also count
>>>> Topk increased to 7 <<<<
Intersection set size: 7
Candidate tokens:  use see tell help only also count
Time taken to get recomputed solution logits:  19.718628644943237
>Prompt Choice:  counting words . I can only is more that a single. I have more then ten▁▁because there more the number. Loss: 8.408073425292969, Mistakes: 0.29629629850387573, Control Loss: 5.57291316986084, Total Loss: 0.4077545702457428
Time taken to get recomputed solution logits:  28.167174339294434
>Prompt Choice:  counting words . I can count is more that a single. I have more then ten▁▁because there more the number. Loss: 4.571671962738037, Mistakes: 0.17241379618644714, Control Loss: 5.389669418334961, Total Loss: 0.28020718693733215
Time taken to get recomputed solution logits:  25.287771701812744
>Prompt Choice:  counting words . I can tell is more that a single. I have more then ten▁▁because there more the number. Loss: 6.108259677886963, Mistakes: 0.22580644488334656, Control Loss: 5.052292823791504, Total Loss: 0.32685229182243347
No improvement in the current position. Moving to the next position.
New Control:  counting words . I can count is more that a single. I have more then ten▁▁because there more the number., New Loss: 0.28020718693733215
Current length: 23
 counting words . I can count is more that a single. I have more then ten▁▁because there more the number.
!!!!Rejecting new control originally, changed !!!!
Current Loss: 0.28020718693733215 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  39.76650547981262
Intersection set size: 4
Candidate tokens:  to up one them
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  all to up one them
>>>> Topk increased to 9 <<<<
Intersection set size: 8
Candidate tokens:  all to. on up one  them
Time taken to get recomputed solution logits:  19.486493349075317
>Prompt Choice:  counting words . I can count them more that a single. I have more then ten▁▁because there more the number. Loss: 3.262540340423584, Mistakes: 0.125, Control Loss: 5.316110610961914, Total Loss: 0.23132219910621643
Time taken to get recomputed solution logits:  20.56081485748291
>Prompt Choice:  counting words . I can count is more that a single. I have more then ten▁▁because there more the number. Loss: 5.422502040863037, Mistakes: 0.21052631735801697, Control Loss: 5.022636413574219, Total Loss: 0.31097903847694397
Time taken to get recomputed solution logits:  26.01015019416809
>Prompt Choice:  counting words . I can count all more that a single. I have more then ten▁▁because there more the number. Loss: 2.0788300037384033, Mistakes: 0.10000000894069672, Control Loss: 5.328822612762451, Total Loss: 0.20657646656036377
No improvement in the current position. Moving to the next position.
New Control:  counting words . I can count all more that a single. I have more then ten▁▁because there more the number., New Loss: 0.20657646656036377
Current length: 23
 counting words . I can count all more that a single. I have more then ten▁▁because there more the number.
Current Loss: 0.20657646656036377 Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  39.84507131576538
Intersection set size: 3
Candidate tokens:  of my the
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens:  of the my these your
>>>> Topk increased to 9 <<<<
Intersection set size: 7
Candidate tokens:  of the these my  by your
Time taken to get recomputed solution logits:  16.844356298446655
>Prompt Choice:  counting words . I can count all  that a single. I have more then ten▁▁because there more the number. Loss: 1.6255967617034912, Mistakes: 0.07407407462596893, Control Loss: 5.719972610473633, Total Loss: 0.18847352266311646
Time taken to get recomputed solution logits:  18.511839628219604
>Prompt Choice:  counting words . I can count all these that a single. I have more then ten▁▁because there more the number. Loss: 4.8965888023376465, Mistakes: 0.21739131212234497, Control Loss: 5.467212677001953, Total Loss: 0.32673555612564087
Time taken to get recomputed solution logits:  19.43585753440857
>Prompt Choice:  counting words . I can count all the that a single. I have more then ten▁▁because there more the number. Loss: 3.404311418533325, Mistakes: 0.15000000596046448, Control Loss: 5.4835662841796875, Total Loss: 0.25967133045196533
No improvement in the current position. Moving to the next position.
New Control:  counting words . I can count all  that a single. I have more then ten▁▁because there more the number., New Loss: 0.18847352266311646
Current length: 23
 counting words . I can count all  that a single. I have more then ten▁▁because there more the number.
Current Loss: 0.18847352266311646 normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
normalizer.cc(51) LOG(INFO) precompiled_charsmap is empty. use identity normalization.
../llm_opt/base/attack_manager.py:942: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  temp = torch.tensor(prompt.input_ids[:prompt._assistant_role_slice.stop])
../llm_opt/base/attack_manager.py:1162: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  temp = torch.tensor(prompt.input_ids[:prompt._assistant_role_slice.stop])
Best Loss: 0.15647956728935242 Best Control:  simple maths . I see that is more that a single. I have more then ten  _
Time taken to update solutions:  32.759626150131226
Intersection set size: 3
Candidate tokens: thethemof
>>>> Topk increased to 7 <<<<
Intersection set size: 5
Candidate tokens: yourthemofthethese
>>>> Topk increased to 9 <<<<
Intersection set size: 6
Candidate tokens: yourthemofthethesemy
Time taken to get recomputed solution logits:  15.22218656539917
>Prompt Choice:  counting words . I can count all▁▁these a single. I have more then ten▁▁because there more the number. Loss: 0.912227988243103, Mistakes: 0.03703703731298447, Control Loss: 5.104852676391602, Total Loss: 0.13913407921791077
Time taken to get recomputed solution logits:  22.57676076889038
>Prompt Choice:  counting words . I can count all▁▁of a single. I have more then ten▁▁because there more the number. Loss: 3.789949417114258, Mistakes: 0.1666666716337204, Control Loss: 5.201608657836914, Total Loss: 0.2706988453865051
Time taken to get recomputed solution logits:  17.811622619628906
>Prompt Choice:  counting words . I can count all▁▁your a single. I have more then ten▁▁because there more the number. Loss: 2.7965245246887207, Mistakes: 0.09090909361839294, Control Loss: 5.175032138824463, Total Loss: 0.19440972805023193
No improvement in the current position. Moving to the next position.
New Control:  counting words . I can count all▁▁these a single. I have more then ten▁▁because there more the number., New Loss: 0.13913407921791077
Current length: 23
 counting words . I can count all▁▁these a single. I have more then ten▁▁because there more the number.
Current Loss: 0.13913407921791077 Best Loss: 0.13913407921791077 Best Control:  counting words . I can count all▁▁these a single. I have more then ten▁▁because there more the number.
Time taken to update solutions:  32.55077290534973
Intersection set size: 2
Candidate tokens: . items
>>>> Topk increased to 7 <<<<
Intersection set size: 3
Candidate tokens: . items things
>>>> Topk increased to 9 <<<<
Intersection set size: 5
Candidate tokens: . words by items things
>>>> Topk increased to 11 <<<<
Intersection set size: 4
Candidate tokens:  together. by things
>>>> Topk increased to 13 <<<<
Intersection set size: 8
Candidate tokens:  together to., up items by things
Time taken to get recomputed solution logits:  20.18322491645813
>Prompt Choice:  counting words . I can count all▁▁these, single. I have more then ten▁▁because there more the number. Loss: 3.4429216384887695, Mistakes: 0.13793103396892548, Control Loss: 5.334195613861084, Total Loss: 0.24461494386196136
Time taken to get recomputed solution logits:  17.699090719223022
>Prompt Choice:  counting words . I can count all▁▁these. single. I have more then ten▁▁because there more the number. Loss: 4.5695343017578125, Mistakes: 0.1599999964237213, Control Loss: 5.480579376220703, Total Loss: 0.2696115970611572
Time taken to get recomputed solution logits:  15.841319799423218
>Prompt Choice:  counting words . I can count all▁▁these to single. I have more then ten▁▁because there more the number. Loss: 2.788299560546875, Mistakes: 0.11538462340831757, Control Loss: 5.4195685386657715, Total Loss: 0.2237759828567505
No improvement in the current position. Moving to the next position.
New Control:  counting words . I can count all▁▁these to single. I have more then ten▁▁because there more the number., New Loss: 0.2237759828567505
Current length: 23
 counting words . I can count all▁▁these to single. I have more then ten▁▁because there more the number.
!!!!Rejecting new control originally, changed !!!!
Current Loss: 0.2237759828567505 Best Loss: 0.13913407921791077 Best Control:  counting words . I can count all▁▁these a single. I have more then ten▁▁because there more the number.
Time taken to update solutions:  31.480043411254883
Intersection set size: 3
Candidate tokens:  see you make
>>>> Topk increased to 7 <<<<
Intersection set size: 6
Candidate tokens:  see be get you find make
Time taken to get recomputed solution logits:  17.92648935317993
>Prompt Choice:  counting words . I can count all▁▁these to find. I have more then ten▁▁because there more the number. Loss: 2.810944080352783, Mistakes: 0.11999999731779099, Control Loss: 5.2780561447143555, Total Loss: 0.22556111216545105
Time taken to get recomputed solution logits:  16.52063798904419
>Prompt Choice:  counting words . I can count all▁▁these to see. I have more then ten▁▁because there more the number. Loss: 1.9892719984054565, Mistakes: 0.10000000149011612, Control Loss: 5.132221221923828, Total Loss: 0.20264442265033722
Time taken to get recomputed solution logits:  26.6027410030365
>Prompt Choice:  counting words . I can count all▁▁these to be. I have more then ten▁▁because there more the number. Loss: 3.0031304359436035, Mistakes: 0.10344827175140381, Control Loss: 5.198724746704102, Total Loss: 0.20742276310920715
No improvement in the current position. Moving to the next position.
New Control:  counting words . I can count all▁▁these to see. I have more then ten▁▁because there more the number., New Loss: 0.20264442265033722
Current length: 23
 counting words . I can count all▁▁these to see. I have more then ten▁▁because there more the number.
Current Loss: 0.20264442265033722 Best Loss: 0.13913407921791077 Best Control:  counting words . I can count all▁▁these a single. I have more then ten▁▁because there more the number.
